/*
 * ClassPropertiesPanel.java
 *
 * Created on July 3, 2001, 2:43 PM
 */

package xml;
import xml.structure.*;
/**
 *
 * @author  reaction
 * @version 
 */
public class ClassPropertiesPanel extends javax.swing.JPanel {
    BuildClassXML build;
    
    /** Creates new form ClassPropertiesPanel */
    public ClassPropertiesPanel(BuildClassXML b) {
        build = b;
        initComponents ();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        namePanel = new javax.swing.JPanel();
        classNameLabel = new javax.swing.JLabel();
        className = new javax.swing.JTextField();
        superClassLable = new javax.swing.JLabel();
        superClassName = new javax.swing.JTextField();
        typePanel = new javax.swing.JPanel();
        objectCheck = new javax.swing.JCheckBox();
        operationCheck = new javax.swing.JCheckBox();
        algorithmCheck = new javax.swing.JCheckBox();
        setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        
        namePanel.setLayout(new java.awt.GridLayout(2, 2));
        namePanel.setBorder(new javax.swing.border.TitledBorder("Class Information"));
        namePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                update(evt);
            }
        }
        );
        
        classNameLabel.setText("Class Name");
          namePanel.add(classNameLabel);
          
          
        className.setText("ClassName");
          namePanel.add(className);
          
          
        superClassLable.setText("Super Class Name");
          namePanel.add(superClassLable);
          
          
        superClassName.setText("SuperClassName");
          namePanel.add(superClassName);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(namePanel, gridBagConstraints1);
        
        
        typePanel.setLayout(new java.awt.GridLayout(3, 1));
        typePanel.setBorder(new javax.swing.border.TitledBorder("Class Type"));
        
        objectCheck.setToolTipText("Normal Class Derived From Object");
          objectCheck.setSelected(true);
          objectCheck.setText("Object");
          objectCheck.addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  update(evt);
              }
          }
          );
          typePanel.add(objectCheck);
          
          
        operationCheck.setToolTipText("A class derived from operation");
          operationCheck.setText("Operation");
          operationCheck.addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  update(evt);
              }
          }
          );
          typePanel.add(operationCheck);
          
          
        algorithmCheck.setToolTipText("A class derived from the algorithm class");
          algorithmCheck.setText("Algorithm");
          algorithmCheck.addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  update(evt);
              }
          }
          );
          typePanel.add(algorithmCheck);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(typePanel, gridBagConstraints1);
        
    }//GEN-END:initComponents

  private void update(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update
// Add your handling code here:
      build.objectType = objectCheck.isSelected();
      build.operationType = operationCheck.isSelected();
      build.algorithmType = algorithmCheck.isSelected();
      build.toAddClassName = className.getText();
      build.toAddSuperClassName = superClassName.getText();
  }//GEN-LAST:event_update


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel namePanel;
    private javax.swing.JLabel classNameLabel;
    private javax.swing.JTextField className;
    private javax.swing.JLabel superClassLable;
    private javax.swing.JTextField superClassName;
    private javax.swing.JPanel typePanel;
    private javax.swing.JCheckBox objectCheck;
    private javax.swing.JCheckBox operationCheck;
    private javax.swing.JCheckBox algorithmCheck;
    // End of variables declaration//GEN-END:variables

}
