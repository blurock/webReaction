/*
 * ReactMechanismGeneration.java
 *
 * Created on January 22, 2001, 4:17 PM
 */

package react.mechanisms;

import react.common.*;
import react.molecules.*;
import react.reactions.*;
import javax.swing.*;
import java.awt.Dimension;
import javax.swing.tree.*;
    import java.awt.event.*;

/**
 *
 * @author  reaction
 * @version 
 */
public class ReactMechanismGenerationMenu extends javax.swing.JPanel {

    
            public MouseListener ml = new MouseAdapter() {
            public void mousePressed(MouseEvent e) {
                int selRow = mechTree.getRowForLocation(e.getX(),e.getY());
                TreePath path = mechTree.getPathForLocation(e.getX(),e.getY());
                if(path != null) {
                    DefaultMutableTreeNode node = (DefaultMutableTreeNode) 
                     path.getLastPathComponent();
                    String name = (String) node.getUserObject();
                    System.out.println("Selected: " + name);
                    if(selRow != -1) {
                        boolean isleaf = mechTree.getModel().isLeaf(node);
                        if(isleaf) {
                            if(e.getClickCount() == 2) {
                            System.out.println("Is a Leaf Node -->" + name);
                            showNode(node);
                            }
                        }
                   }
                }
            }
        };

    TopReactionMenu Top;
    
    String[] names = new String[20];
    JFrame[] frames = new JFrame[20];
    DefaultMutableTreeNode setOfMechanisms = new DefaultMutableTreeNode("Mechanism Schemes");
    ReactMechanismGeneration generation;
    /** Creates new form ReactMechanismGeneration */
    public ReactMechanismGenerationMenu(TopReactionMenu top,Dimension psize) {
        initComponents ();
        setup(top,psize);
        mechTree.addMouseListener(ml);
    }
    public ReactMechanismGenerationMenu() {
        initComponents ();
        mechTree.addMouseListener(ml);
    }
    public void setup(TopReactionMenu top, Dimension psize) {
        Top = top;
        setPreferredSize(psize);
        chainDialog = new RunChainSetup(top,"Chain Molecules",20);
      readReactionGenerationFile.setupButton("Mechanism","lsr",Top.SystemInfo.submechanismsDir.getValue());
      JButton Read = readReactionGenerationFile.getButton();
      chainMolecules = new ManageListOfMolecules(Top,"Generation Molecules",20);
        Read.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                System.out.print("Generation file read in");
                generation = readReactionGenerationFile.generationSteps;
                drawMechanism();
            }
        }
        );
     }        
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
     private void initComponents() {//GEN-BEGIN:initComponents
         stepListPanel = new javax.swing.JPanel();
         readReactionGenerationFile = new react.mechanisms.ReadReactionGenerationFile();
         writeMechanismButton = new javax.swing.JButton();
         runChainButton = new javax.swing.JButton();
         jPanel3 = new javax.swing.JPanel();
         jScrollPane1 = new javax.swing.JScrollPane();
         mechTree = new JTree(setOfMechanisms);
         setLayout(new java.awt.GridBagLayout());
         java.awt.GridBagConstraints gridBagConstraints1;
         
         stepListPanel.setLayout(new java.awt.GridLayout(1, 3));
         stepListPanel.setPreferredSize(new java.awt.Dimension(400, 30));
         stepListPanel.setMinimumSize(new java.awt.Dimension(400, 30));
         
         readReactionGenerationFile.setPreferredSize(readReactionGenerationFile.getPreferredSize());
           readReactionGenerationFile.setMinimumSize(readReactionGenerationFile.getMinimumSize());
           readReactionGenerationFile.setMaximumSize(readReactionGenerationFile.getMaximumSize());
           readReactionGenerationFile.addMouseListener(new java.awt.event.MouseAdapter() {
               public void mousePressed(java.awt.event.MouseEvent evt) {
                   readReactionGenerationFileMousePressed(evt);
               }
           }
           );
           stepListPanel.add(readReactionGenerationFile);
           
           
         writeMechanismButton.setPreferredSize(readReactionGenerationFile.getPreferredSize());
           writeMechanismButton.setToolTipText("Write Mechanism to File");
           writeMechanismButton.setMaximumSize(readReactionGenerationFile.getMaximumSize());
           writeMechanismButton.setText("Write");
           writeMechanismButton.setMinimumSize(readReactionGenerationFile.getMinimumSize());
           writeMechanismButton.addMouseListener(new java.awt.event.MouseAdapter() {
               public void mousePressed(java.awt.event.MouseEvent evt) {
                   writeMechanismButtonMousePressed(evt);
               }
           }
           );
           stepListPanel.add(writeMechanismButton);
           
           
         runChainButton.setToolTipText("Generate Submechanism");
           runChainButton.setText("Run");
           runChainButton.addMouseListener(new java.awt.event.MouseAdapter() {
               public void mouseClicked(java.awt.event.MouseEvent evt) {
                   runChain(evt);
               }
           }
           );
           stepListPanel.add(runChainButton);
           
           
         gridBagConstraints1 = new java.awt.GridBagConstraints();
         gridBagConstraints1.gridx = 0;
         gridBagConstraints1.gridy = 0;
         gridBagConstraints1.gridwidth = 0;
         gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
         add(stepListPanel, gridBagConstraints1);
         
         
         jPanel3.setPreferredSize(new java.awt.Dimension(400, 300));
         jPanel3.setMinimumSize(new java.awt.Dimension(50, 300));
         
         jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 300));
           
           mechTree.setPreferredSize(new java.awt.Dimension(400, 1200));
             jScrollPane1.setViewportView(mechTree);
             
             jPanel3.add(jScrollPane1);
           
           
         gridBagConstraints1 = new java.awt.GridBagConstraints();
         gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
         add(jPanel3, gridBagConstraints1);
         
     }//GEN-END:initComponents

  private void runChain(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_runChain
// Add your handling code here:
    //JFrame f = new JFrame();
    //f.setContentPane(molDialog);
    //f.setVisible(true);
    chainDialog.setVisible(true);
    chainDialog.pack();
    chainDialog.show();
    String[] mols   = chainDialog.listOfMolecules.moleculeList.getElements();
    String mechname = chainDialog.mechanismName.getText();
    String molname  = chainDialog.mainMolecule.getText();
    StringBuffer command = new StringBuffer("runchain.sh " + mechname + " ");
    for(int i=0;i<mols.length;i++) {
        if(i>0) 
            command.append(",");
        command.append(mols[i]);
    }
    command.append(" " + molname + "-" + mechname);
    System.out.println("Command: " + command.toString());
    
  }//GEN-LAST:event_runChain

  private void readReactionGenerationFileMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_readReactionGenerationFileMousePressed
// Add your handling code here:

  }//GEN-LAST:event_readReactionGenerationFileMousePressed

  private void writeMechanismButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_writeMechanismButtonMousePressed
// Add your handling code here:
  }//GEN-LAST:event_writeMechanismButtonMousePressed

    public void drawMechanism() {
        System.out.println("------------  Draw Mechanisms ====================");
     generation = readReactionGenerationFile.generationSteps;
     DefaultMutableTreeNode mech = 
                    new DefaultMutableTreeNode(generation.mechanismName);
     setOfMechanisms.add(mech);
     System.out.println("ShowMechanismButtonKeyPressed");
     int numsteps = generation.Steps.length;
     System.out.println("Draw Mechanism: " + numsteps);
     for(int i = 0; i<numsteps;i++) {
         System.out.println("Step: + " + i);
            DefaultMutableTreeNode stepnode = 
                    new DefaultMutableTreeNode("Step: " + i);
            mech.add(stepnode);
            ReactMechanismGenerationStep step = generation.Steps[i];
            addStepButton(i,stepnode,step);
       }
        mechTree.repaint();
        mechTree.updateUI();
    }
    public void addStepButton(int stepnum,DefaultMutableTreeNode topnode,
                    ReactMechanismGenerationStep step) {
                        System.out.println("addSetButton: " + stepnum);
     DefaultMutableTreeNode steps = 
                    new DefaultMutableTreeNode("Steps");
     topnode.add(steps);
     DefaultMutableTreeNode mols = 
                    new DefaultMutableTreeNode("Molecules");
     topnode.add(mols);

     for(int i=0;i<step.Patterns.length;i++) {
            DefaultMutableTreeNode st = 
                    new DefaultMutableTreeNode(step.Patterns[i]);
            steps.add(st);
        }
     try {
        for(int i=0;i<step.stepMolecules.length;i++) {
               DefaultMutableTreeNode m = 
                       new DefaultMutableTreeNode(step.stepMolecules[i]);
              mols.add(m);
        }
     } catch (NullPointerException ex) {
            System.out.println("No molecules");

     }
    }
    void showNode(DefaultMutableTreeNode node) {
        String name = (String) node.getUserObject();
        ReactRxnPattern CurrentRxnPat = new ReactRxnPattern(Top);
	CurrentRxnPat.getReactionInfo(name);
        JPanel panel = new JPanel();
        ReactionPatternDraw rdraw = new ReactionPatternDraw(Top,CurrentRxnPat,panel);
        JFrame frame = new JFrame();
        frame.getContentPane().add(panel);
        frame.setVisible(true);
        frame.setName(name);
        frame.pack();
        
    }
    int findButton(String name) {
        boolean notfound = true;
        int i = 0;
        while(notfound && i < 20) {
            System.out.println("Compare: " + name + "  " + names[i]);
            if(name.startsWith(names[i]))
                notfound = false;
            else
                i++;
            }
            return i;
        }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JPanel stepListPanel;
        private react.mechanisms.ReadReactionGenerationFile readReactionGenerationFile;
        private javax.swing.JButton writeMechanismButton;
        private javax.swing.JButton runChainButton;
        private javax.swing.JPanel jPanel3;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JTree mechTree;
        // End of variables declaration//GEN-END:variables

        public ManageListOfMolecules chainMolecules;        

        public RunChainSetup chainDialog;
        
}
