/*
 * ReactionMechanismGraphMenu.java
 *
 * Created on January 18, 2002, 4:41 PM
 */

package react.mechanisms;
import java.io.*;
import utilities.*;
import java.awt.Color;
import react.common.*;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JLabel;
import java.awt.event.*;
/**
 *
 * @author  reaction
 * @version 
 */
public class ReactionMechanismGraphMenu extends javax.swing.JPanel implements MouseListener {

    ReactionMechanism mechanism;
    TopReactionMenu Top;
    ReactMechanismGraphOptions optpanel;
    JFrame mechFrame = new JFrame("Mechanism");
    public ReactMechanismGraph mechgraph;
    /** Creates new form ReactionMechanismGraphMenu */
    public ReactionMechanismGraphMenu(TopReactionMenu top) {
        Top = top;
        initComponents ();
     }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
     private void initComponents() {//GEN-BEGIN:initComponents
         jPanel2 = new javax.swing.JPanel();
         readButton = new javax.swing.JButton();
         jPanel1 = new javax.swing.JPanel();
         mechWithReactions = new javax.swing.JRadioButton();
         mechWithRxnClasses = new javax.swing.JRadioButton();
         jPanel3 = new javax.swing.JPanel();
         displayObject = new javax.swing.JRadioButton();
         jPanel4 = new javax.swing.JPanel();
         toggleConnections = new javax.swing.JRadioButton();
         newRoot = new javax.swing.JRadioButton();
         setLayout(new java.awt.GridBagLayout());
         java.awt.GridBagConstraints gridBagConstraints1;
         
         jPanel2.setBorder(new javax.swing.border.TitledBorder("Read Reaction Mechanism"));
         jPanel2.setToolTipText("");
         
         readButton.setToolTipText("Read From Mechanism File");
           readButton.setText("Read");
           readButton.addMouseListener(new java.awt.event.MouseAdapter() {
               public void mouseClicked(java.awt.event.MouseEvent evt) {
                   readButtonMouseClicked(evt);
               }
           }
           );
           jPanel2.add(readButton);
           
           
         gridBagConstraints1 = new java.awt.GridBagConstraints();
         gridBagConstraints1.gridwidth = 0;
         gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
         add(jPanel2, gridBagConstraints1);
         
         
         jPanel1.setBorder(new javax.swing.border.TitledBorder("Draw Reactions"));
         
         mechWithReactions.setText("Reactions");
           mechWithReactions.addMouseListener(new java.awt.event.MouseAdapter() {
               public void mouseClicked(java.awt.event.MouseEvent evt) {
                   mechWithReactionsMouseClicked(evt);
               }
           }
           );
           jPanel1.add(mechWithReactions);
           
           
         mechWithRxnClasses.setSelected(true);
           mechWithRxnClasses.setText("Reaction Classes");
           mechWithRxnClasses.addMouseListener(new java.awt.event.MouseAdapter() {
               public void mouseClicked(java.awt.event.MouseEvent evt) {
                   mechWithRxnClassesMouseClicked(evt);
               }
           }
           );
           jPanel1.add(mechWithRxnClasses);
           
           
         gridBagConstraints1 = new java.awt.GridBagConstraints();
         gridBagConstraints1.gridwidth = 0;
         gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
         add(jPanel1, gridBagConstraints1);
         
         
         jPanel3.setBorder(new javax.swing.border.TitledBorder("Middle Mouse Click"));
         
         displayObject.setToolTipText("Display Object Name (Click name to see object)");
           displayObject.setSelected(true);
           displayObject.setText("Display Node Object");
           jPanel3.add(displayObject);
           
           
         gridBagConstraints1 = new java.awt.GridBagConstraints();
         gridBagConstraints1.gridwidth = 0;
         gridBagConstraints1.gridheight = -1;
         gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
         add(jPanel3, gridBagConstraints1);
         
         
         jPanel4.setBorder(new javax.swing.border.TitledBorder("Right Mouse Click"));
         
         toggleConnections.setLabel("Toggle Connections");
           toggleConnections.setSelected(true);
           jPanel4.add(toggleConnections);
           
           
         newRoot.setText("New Root Object");
           jPanel4.add(newRoot);
           
           
         gridBagConstraints1 = new java.awt.GridBagConstraints();
         gridBagConstraints1.gridwidth = 0;
         gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
         add(jPanel4, gridBagConstraints1);
         
     }//GEN-END:initComponents

  private void readButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_readButtonMouseClicked
      FileFrame ff = new FileFrame();
      ff.setupButton("Read Mechanism",".","mech");
      ff.getFile();
      File chosenFile = ff.chosenFile;
      try {
        mechanism = new ReactionMechanism();
        mechanism.readFromFile(chosenFile);
        display();
      } catch(IOException io) {
            System.out.println("File not found");
      }

  }//GEN-LAST:event_readButtonMouseClicked

  private void mechWithRxnClassesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mechWithRxnClassesMouseClicked
      boolean withrxncls = mechWithRxnClasses.isSelected();
      toggleWithReactions(!withrxncls);
  }//GEN-LAST:event_mechWithRxnClassesMouseClicked

  private void mechWithReactionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mechWithReactionsMouseClicked
      boolean withrxns = mechWithReactions.isSelected();
      toggleWithReactions(withrxns);
  }//GEN-LAST:event_mechWithReactionsMouseClicked

  private void toggleWithReactions(boolean withrxns) {
     if(mechgraph != null) {
        mechgraph.drawRxnClass = withrxns;
        mechgraph.drawRxnClass = !withrxns;
     }
      mechWithReactions.setSelected(withrxns);
      mechWithRxnClasses.setSelected(!withrxns);
  }  
  private void display() {
      mechgraph = new ReactMechanismGraph(Top,mechanism,mechWithRxnClasses.isSelected());
      mechgraph.repaint();
      JPanel pnl = new JPanel();
      mechgraph.addMouseListener(this);
      pnl.addMouseListener(this);
      pnl.add(mechgraph);
      pnl.setMinimumSize(new java.awt.Dimension(200,200));
      mechFrame.getContentPane().removeAll();
      mechFrame.getContentPane().add(pnl);
      mechFrame.setVisible(true);
      mechFrame.pack();
      mechFrame.show();
  }
/** no current action
 * @param e The event
 */    
    public void mouseClicked(MouseEvent e) {}
/** NO current action
 * @param e The event
 */    
    public void mouseEntered(MouseEvent e) {}
/** No current action
 * @param e The event
 */    
    public void mouseExited(MouseEvent e) {}
/** No current action
 * @param e The event
 */    
    public void mouseReleased(MouseEvent e) {}
    public void mousePressed(MouseEvent e) {
        if((e.getModifiers() &  InputEvent.BUTTON1_MASK) == InputEvent.BUTTON1_MASK) {
            mechgraph.mousePressed(e);
        }
        if((e.getModifiers() &  InputEvent.BUTTON2_MASK) == InputEvent.BUTTON2_MASK) {
            if(displayObject.isSelected()) {
                int x = e.getX();
                int y = e.getY();
                int nindex = mechgraph.getNodeFromCoordinates(x,y);
                ReactMechanismGraphNode pick = (ReactMechanismGraphNode) mechgraph.Nodes.elementAt(nindex);
                ReactMechanismObjectPanel pnl = new ReactMechanismObjectPanel(pick);
                JFrame fr  = new JFrame(pick.getNameTag() + ": " + pick.nodeName);
                fr.getContentPane().add(pnl);
                fr.setVisible(true);
                fr.pack();
                fr.show();
            }
        } else if((e.getModifiers() &  InputEvent.BUTTON3_MASK) == InputEvent.BUTTON3_MASK) {
            if(toggleConnections.isSelected()) {
                int x = e.getX();
                int y = e.getY();
                int nindex = mechgraph.getNodeFromCoordinates(x,y);
                ReactMechanismGraphNode pick = (ReactMechanismGraphNode) mechgraph.Nodes.elementAt(nindex);
                if(pick.drawNode) {
                    pick.drawNode = false;
                    System.out.println(pick.nodeName + " set to false");
                } else {
                    pick.drawNode = true;
                   System.out.println(pick.nodeName + " set to true");
                }
                mechgraph.repaint();                
            }
            if(newRoot.isSelected()) {
                int x = e.getX();
                int y = e.getY();
                int nindex = mechgraph.getNodeFromCoordinates(x,y);
                ReactMechanismGraphNode pick = (ReactMechanismGraphNode) mechgraph.Nodes.elementAt(nindex);
                mechgraph.recomputeNodePositions(pick,true);
                repaint();
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton readButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton mechWithReactions;
    private javax.swing.JRadioButton mechWithRxnClasses;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton displayObject;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton toggleConnections;
    private javax.swing.JRadioButton newRoot;
    // End of variables declaration//GEN-END:variables

}
