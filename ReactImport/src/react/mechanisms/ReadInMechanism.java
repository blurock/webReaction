/*
 * ReadInMechanism.java
 *
 * Created on March 9, 2002, 9:35 PM
 */

package react.mechanisms;
import blurock.core.*;
import java.io.*;
import java.util.StringTokenizer;
import react.mechanisms.*;
import react.molecules.*;
import react.utilities.*;
import react.common.*;
import utilities.*;
import utilities.OutputFrame;
import blurock.utilities.SetUpClassAttrFile;
/**
 *
 * @author  reaction
 * @version 
 */
public class ReadInMechanism extends javax.swing.JPanel {
    TopReactionMenu Top;

    /** Creates new form ReadInMechanism */
    public ReadInMechanism(TopReactionMenu top) {
        Top = top;
        initComponents ();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        inputRootLabel = new javax.swing.JLabel();
        inputRoot = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        authorText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        sourceText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        noteText = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        readMechanism = new javax.swing.JButton();
        baseMolecules = new javax.swing.JButton();
        listOfMolecules = new ManageListOfMolecules(Top,"Submechanism Molecules",30);
        
        setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        
        jPanel1.setLayout(new java.awt.GridLayout(1, 2));
        jPanel1.setToolTipText("Root Name of Mechanism Files");
        
        inputRootLabel.setText("Input Root");
          jPanel1.add(inputRootLabel);
          
          
        inputRoot.setText("Test-Combined");
          jPanel1.add(inputRoot);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel1, gridBagConstraints1);
        
        
        jPanel2.setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints2;
        jPanel2.setBorder(new javax.swing.border.TitledBorder(
        new javax.swing.border.EtchedBorder(), "Mechanism Reference"));
        
        jPanel3.setLayout(new java.awt.GridLayout(3, 2));
          jPanel3.setMinimumSize(new java.awt.Dimension(400, 70));
          
          jLabel3.setText("Author");
            jPanel3.add(jLabel3);
            
            
          authorText.setPreferredSize(new java.awt.Dimension(200, 16));
            authorText.setText("Edward S. Blurock");
            authorText.setMinimumSize(new java.awt.Dimension(200, 16));
            jPanel3.add(authorText);
            
            
          jLabel4.setText("Source");
            jPanel3.add(jLabel4);
            
            
          sourceText.setPreferredSize(new java.awt.Dimension(200, 16));
            sourceText.setText("Generated");
            jPanel3.add(sourceText);
            
            
          jLabel5.setText("Note");
            jPanel3.add(jLabel5);
            
            
          noteText.setPreferredSize(new java.awt.Dimension(200, 16));
            noteText.setText("from react");
            jPanel3.add(noteText);
            
            gridBagConstraints2 = new java.awt.GridBagConstraints();
          gridBagConstraints2.gridwidth = 0;
          gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
          jPanel2.add(jPanel3, gridBagConstraints2);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel2, gridBagConstraints1);
        
        
        jPanel4.setLayout(new java.awt.GridLayout(1, 2));
        
        readMechanism.setText("Read Mechanism");
          readMechanism.addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  readMechanismMouseClicked(evt);
              }
          }
          );
          jPanel4.add(readMechanism);
          
          
        baseMolecules.setToolTipText("Read in base mechanism molecules");
          baseMolecules.setText("Base Mechanism Molecules");
          baseMolecules.addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  baseMoleculesMouseClicked(evt);
              }
          }
          );
          jPanel4.add(baseMolecules);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel4, gridBagConstraints1);
        
        
        java.awt.GridBagConstraints gridBagConstraints3;
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        add(listOfMolecules, gridBagConstraints1);
        
    }//GEN-END:initComponents

  private void baseMoleculesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_baseMoleculesMouseClicked
    FileToString f = new FileToString("Submechanism Molecules",".","mol");
    StringTokenizer strtoken = new StringTokenizer(f.outputString);
    String[] molnames = new String[strtoken.countTokens()];
    int count = 0;
    while(strtoken.hasMoreTokens()) {
        String name = strtoken.nextToken();
        molnames[count] = name;
        count++;
    }
    String[] reducedlist = new String[count];
    for(int i=0;i<count;i++) {
        reducedlist[i] = molnames[i];
        System.out.println("Molecule: '" + reducedlist[i] + "'");
    }
    listOfMolecules.moleculeList.addNewItems(reducedlist);
  }//GEN-LAST:event_baseMoleculesMouseClicked

  private void readMechanismMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_readMechanismMouseClicked
      String rootname = inputRoot.getText();
      String fileclassS = new String(rootname + "Class.inp");
      String fileargsS = new String(rootname + ".inp");
      
      String[] molnames = listOfMolecules.moleculeList.getElements();
      String author = authorText.getText();
      String source = sourceText.getText();
      String note = noteText.getText();
      
      try {
        FileOutputStream fileclass = new FileOutputStream(fileclassS);
        PrintStream inpclass = new PrintStream(fileclass);
        FileOutputStream fileargs = new FileOutputStream(fileargsS);
        PrintStream inpargs = new PrintStream(fileargs);
        SetUpClassAttrFile inpfile = new SetUpClassAttrFile(Top,rootname,"Input Generated Mechanism");
        inpfile.addClassTypeAsString("MoleculeSummarySet",
                                     "StandardMoleculeSummary",
                                     "The set of standard molecule summaries",
                                     "MoleculeSummary");
        String[] genkeys = new String[10];
        genkeys[0] = rootname;
        genkeys[1] = Top.Defaults.dbaseName.getValue();
        genkeys[2] = Top.Defaults.molDatabaseName.getValue();
        genkeys[3] = Top.Defaults.rxnDatabaseName.getValue();
        genkeys[4] = Top.Defaults.mechDatabaseName.getValue();
        genkeys[5] = Top.Defaults.chemkinClass.getValue();
        genkeys[6] = Top.Defaults.chemkinCoeffsName.getValue();
        genkeys[7] = Top.Defaults.chemkinMoleculeName.getValue();
        genkeys[8] = "RefGenerated";
        genkeys[9] = "StandardMoleculeSummary";
        inpfile.printKeyWords("Generated",genkeys);
        
        inpfile.printObjectAsString("RefGenerated", 
                    source + " ; " + author + " ; " + note ,
                    "LiteratureReference");
        
        StringBuffer moldefs = new StringBuffer();
        for(int i=0;i<molnames.length;i++) {
            moldefs.append(molnames[i] + " ");
            moldefs.append(Top.Defaults.chemkinCoeffsName.getValue() + " ");
            moldefs.append(Top.Defaults.chemkinMoleculeName.getValue() + "\n");
            }
        moldefs.append("END\n");
        inpfile.printObjectAsString("StandardMoleculeSummary",moldefs.toString(),"StandardMoleculeSummary");
        inpfile.read(false);
       
       RunAlgorithm run = new RunAlgorithm(Top,"InputGenerated",false);
        run.run();
        run.showResults();
      } catch(IOException ios) {
          System.out.println("Could not open file");
      }
  }//GEN-LAST:event_readMechanismMouseClicked

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel jPanel1;
  private javax.swing.JLabel inputRootLabel;
  private javax.swing.JTextField inputRoot;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JTextField authorText;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JTextField sourceText;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JTextField noteText;
  private javax.swing.JPanel jPanel4;
  private javax.swing.JButton readMechanism;
  private javax.swing.JButton baseMolecules;
  private react.molecules.ManageListOfMolecules listOfMolecules;
  // End of variables declaration//GEN-END:variables

}
