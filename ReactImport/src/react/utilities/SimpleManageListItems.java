/*
 * ManageListItems.java
 *
 * Created on February 1, 2001, 2:40 PM
 */

package react.utilities;

import react.common.*;

/**
 *
 * @author  reaction
 * @version 
 */
public class SimpleManageListItems extends javax.swing.JPanel {

    /** Creates new form ManageListItems */
    public SimpleManageListItems() {
        initComponents ();
    }

    public SimpleManageListItems(java.lang.String title,String[] choices,int maxsize) {
        Source = choices;
        elementList = new String[maxsize];
        Title = title;
        initComponents();
        setBorder(new javax.swing.border.TitledBorder(title));
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        Lists = new react.utilities.StandardListPanel();
        setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        setBorder(new javax.swing.border.TitledBorder("Elment LIst"));
        
        jPanel1.setLayout(new java.awt.GridLayout(1, 2));
        
        addButton.setText("Add");
          addButton.addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  addElement(evt);
              }
          }
          );
          jPanel1.add(addButton);
          
          
        removeButton.setText("Remove");
          removeButton.addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  removeElement(evt);
              }
          }
          );
          jPanel1.add(removeButton);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel1, gridBagConstraints1);
        
        
        Lists.setMinimumSize(new java.awt.Dimension(300, 300));
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
        add(Lists, gridBagConstraints1);
        
    }//GEN-END:initComponents

  private void removeElement(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeElement
      String [] toremove = Lists.selectedItemsToString(false);
      int newcount = 0;
      for(int i=0;i<numElements;i++) {
          if(notInList(toremove,elementList[i])) {
              elementList[newcount] = elementList[i];
              newcount++;
          }
      }
      numElements = newcount;
      System.out.println("New element count: " + numElements);
      Lists.setData(elementList);
      repaint();
      updateUI();
  }//GEN-LAST:event_removeElement
  private boolean notInList(String[] names, String name) {
      boolean notinlist = true;
      int count = 0;
      while(notinlist && count < names.length) {
          if(names[count].equals(name))
              notinlist = false;
              count++;
      }
      return notinlist;
  }
  private void addElement(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addElement
	System.out.println("add Items");
	StandardListDialog dialog = new StandardListDialog(Source);
	System.out.println("created dialog");
	dialog.show();
	System.out.println("came back: " + dialog.getReturnStatus());
	if(dialog.getReturnStatus() == dialog.RET_OK) {
	    System.out.println("OK was Pressed");
	    String[] selected = dialog.listPanel.selectedItemsToString(true);
            addNewItems(selected);
	}
  }//GEN-LAST:event_addElement
  public void addNewItems(String[] items) {
      System.out.println("addNewItems: numElements: " + numElements
            + "  new items: " + items.length);
      String[] eles = new String[numElements+items.length];
      numElements = 0;
      for(int j=0;j<numElements;j++) {
          eles[numElements] = elementList[j];
          numElements++;
      }
      for(int i=0;i<items.length;i++) {
          eles[numElements] = items[i];
          numElements++;
      }
      elementList = eles;
      Lists.setData(elementList);
      repaint();
      updateUI();
  }
  public void setItems(String[] items) {
      Lists.setData(items);
      numElements = items.length;
      elementList = items;
  }
  public String[] getElements() {
      String[] elements = new String[numElements];
      for(int i=0;i<numElements;i++) {
          elements[i] = elementList[i];
      }
      return elements;
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel jPanel1;
  private javax.swing.JButton addButton;
  private javax.swing.JButton removeButton;
  private react.utilities.StandardListPanel Lists;
  // End of variables declaration//GEN-END:variables

  public String[] Source;  

  public String[] elementList = new String[0];
  
  public int numElements = 0;
  
  public String Title = "List";
  
}
