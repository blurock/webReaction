/*
 * PredicatesClusteringPanel.java
 *
 * Created on January 31, 2002, 6:00 PM
 */

package react.menu;
import react.common.TopReactionMenu;
import blurock.instattr.SelectInstanceAttributes;
import javax.swing.JFrame;
import blurock.instattr.GetAttributeParameter;
import blurock.utilities.SetUpClassAttrFile;
import utilities.ErrorFrame;
import java.io.*;
import blurock.core.RunCommand;
import ignition.ClusterRegionAlpgorithmParameters;
import blurock.instattr.GetAttributeParameter;
import blurock.coreobjects.BaseDataKeyWords;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
/**
 *
 * @author  reaction
 * @version 
 */
public class PredicatesClusteringPanel extends javax.swing.JPanel {
    //TopReactionMenu Top;
    //String selectedAttributes[] = null;
    
    ClusterRegionAlpgorithmParameters algParameters = null;
    
    /** Creates new form PredicatesClusteringPanel */
    public PredicatesClusteringPanel(TopReactionMenu top,  ClusterRegionAlpgorithmParameters algP) {
        algParameters = algP;
        //Top = top;
        initComponents ();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        predSetLabel = new javax.swing.JLabel();
        predicateSetField = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        minValueText = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        percentageSlider = new javax.swing.JSlider();
        widthSlider = new javax.swing.JSlider();
        maxValueText = new javax.swing.JTextField();
        makePredicatesButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        PartitionTable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        makePartitonButton = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        startButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        attributeSelectButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(new javax.swing.border.TitledBorder("General Predicate Settings"));
        jPanel2.setMinimumSize(new java.awt.Dimension(350, 40));
        jPanel6.setLayout(new java.awt.GridLayout(1, 0));

        predSetLabel.setText("Predicate Set");
        jPanel6.add(predSetLabel);

        predicateSetField.setText("Predicate");
        predicateSetField.setToolTipText("For Multi-Predicate Sets");
        jPanel6.add(predicateSetField);

        jPanel2.add(jPanel6, java.awt.BorderLayout.NORTH);

        jPanel4.setLayout(new java.awt.BorderLayout());

        minValueText.setText("0.0");
        minValueText.setMinimumSize(new java.awt.Dimension(50, 16));
        minValueText.setPreferredSize(new java.awt.Dimension(50, 16));
        jPanel4.add(minValueText, java.awt.BorderLayout.WEST);

        jPanel5.setLayout(new java.awt.GridLayout(2, 1));

        percentageSlider.setMajorTickSpacing(10);
        percentageSlider.setMinorTickSpacing(5);
        percentageSlider.setPaintTicks(true);
        percentageSlider.setSnapToTicks(true);
        percentageSlider.setToolTipText("Set the center of the fuzzy predicate");
        percentageSlider.setValue(10);
        percentageSlider.setName("Center");
        jPanel5.add(percentageSlider);

        widthSlider.setMajorTickSpacing(10);
        widthSlider.setMinorTickSpacing(5);
        widthSlider.setPaintTicks(true);
        widthSlider.setSnapToTicks(true);
        widthSlider.setToolTipText("Set Width of Fuzzy Predicate (relative to center)");
        widthSlider.setValue(0);
        widthSlider.setName("Width");
        jPanel5.add(widthSlider);

        jPanel4.add(jPanel5, java.awt.BorderLayout.CENTER);

        maxValueText.setText("1.00");
        maxValueText.setMinimumSize(new java.awt.Dimension(50, 16));
        maxValueText.setPreferredSize(new java.awt.Dimension(50, 16));
        jPanel4.add(maxValueText, java.awt.BorderLayout.EAST);

        makePredicatesButton.setText("Setup");
        makePredicatesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                makePredicatesButtonMouseClicked(evt);
            }
        });

        jPanel4.add(makePredicatesButton, java.awt.BorderLayout.SOUTH);

        jPanel2.add(jPanel4, java.awt.BorderLayout.SOUTH);

        jPanel7.setLayout(new java.awt.BorderLayout());

        PartitionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Predicate List", "Title 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PartitionTable.setPreferredSize(new java.awt.Dimension(200, 50));
        jPanel7.add(PartitionTable, java.awt.BorderLayout.CENTER);

        jPanel8.setLayout(new java.awt.GridLayout(1, 1));

        makePartitonButton.setText("Make Partition List");
        makePartitonButton.setToolTipText("Combine the enabled partion lists");
        makePartitonButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                makePartitonButtonMouseClicked(evt);
            }
        });

        jPanel8.add(makePartitonButton);

        jPanel7.add(jPanel8, java.awt.BorderLayout.SOUTH);

        jPanel2.add(jPanel7, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel9.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.GridLayout(1, 2));

        jPanel3.setBorder(new javax.swing.border.TitledBorder("Phase Calculation"));
        startButton.setText("Start");
        startButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startButtonMouseClicked(evt);
            }
        });

        jPanel3.add(startButton);

        saveButton.setText("Save");
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveButtonMouseClicked(evt);
            }
        });

        jPanel3.add(saveButton);

        jPanel9.add(jPanel3, java.awt.BorderLayout.NORTH);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(new javax.swing.border.TitledBorder("Select Attributes"));
        attributeSelectButton.setText("Select");
        attributeSelectButton.setToolTipText("Select out the attributes for forming the predicates");
        attributeSelectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attributeSelectButtonMouseClicked(evt);
            }
        });

        jPanel1.add(attributeSelectButton, java.awt.BorderLayout.CENTER);

        jPanel9.add(jPanel1, java.awt.BorderLayout.CENTER);

        add(jPanel9, java.awt.BorderLayout.NORTH);

    }//GEN-END:initComponents

    private void makePartitonButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_makePartitonButtonMouseClicked
      DefaultTableModel tmodel = (DefaultTableModel) PartitionTable.getModel();
      int numrows = tmodel.getRowCount();
      int totaldim = 0;
      ArrayList arr = new ArrayList();
      for(int i=0;i<numrows;i++) {
          Boolean enabled = (Boolean) tmodel.getValueAt(i,1);
          if(enabled.booleanValue()) {
              String name = (String) tmodel.getValueAt(i,0);
              BaseDataKeyWords keys = (BaseDataKeyWords) algParameters.partitions.get(name);
              String[] partnames = keys.keyWordAsStringArray();
              for(int j=0;j<partnames.length;j++) {
                  System.out.println(partnames[j]);
                  arr.add(partnames[j]);
              }
          }
      }
      Object[] objs = arr.toArray();
      String[] names = new String[objs.length];
      for(int i=0;i<objs.length;i++)
          names[i] = (String) objs[i];
      
      String basename = predicateSetField.getText();
      String basefilename = new String("SetPartitionList"+basename);
      SetUpClassAttrFile clsattr = 
            new SetUpClassAttrFile(algParameters.Top,basefilename,"Set up Partition list ");
      clsattr.printKeyWords("PartitionList",names);
      clsattr.read(true);
    }//GEN-LAST:event_makePartitonButtonMouseClicked

  private void saveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseClicked
      algParameters.Top.stopSystemProcess();
  }//GEN-LAST:event_saveButtonMouseClicked

  private void startButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startButtonMouseClicked
    algParameters.Top.history.setToFlame();
    algParameters.Top.startSystemProcess();
  }//GEN-LAST:event_startButtonMouseClicked

  private void makePredicatesButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_makePredicatesButtonMouseClicked
      String basename = predicateSetField.getText();
      SelectInstanceAttributes attrs = (SelectInstanceAttributes)
                algParameters.Top.selectInstanceAttributes.panelObject;
      algParameters.selectedAttributes = attrs.getSelectedAttributes();
      System.out.println("Attribute List" + algParameters.selectedAttributes.length);
    double min = Double.valueOf(minValueText.getText()).doubleValue();
    double max = Float.valueOf(maxValueText.getText()).doubleValue();
    double slid = (double) percentageSlider.getValue();
    double swidth = (double) widthSlider.getValue();
    double center = min + (max-min)*slid/100.0;
    System.out.println("Slider " + slid + " " + swidth + " " + max + "  " + min);
    double width = Math.abs((slid-swidth)*(max-min))/100.0;
    
    StringBuffer critpoints = new StringBuffer();
    critpoints.append("%%% Set of Critical Points for cluster calculation\n");
    for(int i=0;i<algParameters.selectedAttributes.length;i++) {
        String name = algParameters.selectedAttributes[i];
        System.out.println(name);
        critpoints.append(name + " CriticalPoints: " + name + " [" + center + "," + width + "] END\n");
    }
    try {
        String filename = new String("CriticalPointPairs" + basename + ".dat");
        String attrfilename = new String("CriticalPoints" + basename);
        PrintWriter out = new PrintWriter(new FileOutputStream(filename));
        out.print(critpoints.toString());
        out.close();
        SetUpClassAttrFile crit = new SetUpClassAttrFile(algParameters.Top,attrfilename,"Critical Point Pairs");
        String filen[] = new String[1];
        String rootn[] = new String[1];
        String types[] = new String[1];
        filen[0] = filename;
        rootn[0] = new String("P_");
        types[0] = new String("LTGT");
        crit.printKeyWords("CriticalPointsFileName",filen);
        crit.printKeyWords("CriticalPointsRootName",rootn);
        crit.printKeyWords("PartitionTypesFromPoints",types);
        crit.read(true);
        RunCommand run = new RunCommand(algParameters.Top,"RunGoal PartitionsFromCriticalPoints 0",true);
        run.showResults();
        
        BaseDataKeyWords parlist = getPartitionList();
        algParameters.partitions.put(basename,parlist);
        DefaultTableModel tmodel = (DefaultTableModel) PartitionTable.getModel();
        tmodel.addRow( new Object[] {basename,new Boolean(true)});
    } catch(IOException io) {
        ErrorFrame fr = new ErrorFrame("Error in Writing Critical Points");
        fr.show();
    }
    
  }//GEN-LAST:event_makePredicatesButtonMouseClicked
  private BaseDataKeyWords getPartitionList() {
       BaseDataKeyWords keywords = new BaseDataKeyWords();
      GetAttributeParameter getPartList = new GetAttributeParameter(algParameters.Top);
      String parlistS = new String("PartitionList");
      boolean done = getPartList.getParameterAsString(parlistS);
      if(done) {
        keywords.isolateObject(getPartList.outputString);
      } else {
          System.out.println("PartitionList not read: list empty");
      }
      return keywords;
  }
  private void attributeSelectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attributeSelectButtonMouseClicked
      algParameters.Top.selectInstanceAttributes.setVisible(true);
  }//GEN-LAST:event_attributeSelectButtonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField predicateSetField;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSlider percentageSlider;
    private javax.swing.JLabel predSetLabel;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSlider widthSlider;
    private javax.swing.JTextField minValueText;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton makePartitonButton;
    private javax.swing.JTextField maxValueText;
    private javax.swing.JButton makePredicatesButton;
    private javax.swing.JButton startButton;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JButton saveButton;
    private javax.swing.JTable PartitionTable;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JButton attributeSelectButton;
    private javax.swing.JPanel jPanel9;
    // End of variables declaration//GEN-END:variables

}
