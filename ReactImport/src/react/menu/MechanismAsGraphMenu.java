/*
 * MechanismAsGraphMenu.java
 *
 * Created on February 15, 2002, 10:00 PM
 */

package react.menu;
import react.common.TopReactionMenu;
import blurock.core.RunAlgorithm;
/**
 *
 * @author  reaction
 * @version 
 */
public class MechanismAsGraphMenu extends javax.swing.JPanel {
    TopReactionMenu Top;

    /** Creates new form MechanismAsGraphMenu */
    public MechanismAsGraphMenu(TopReactionMenu top) {
        Top = top;
        initComponents ();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        phaseCalculation = new javax.swing.JPanel();
        startButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        leafAnalysis = new javax.swing.JPanel();
        allowReverse = new javax.swing.JRadioButton();
        startAnalysis = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        phaseCalculation.setLayout(new java.awt.GridLayout(1, 2));

        phaseCalculation.setBorder(new javax.swing.border.TitledBorder("Phase Calculation"));
        startButton.setText("Start");
        startButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startButtonMouseClicked(evt);
            }
        });

        phaseCalculation.add(startButton);

        saveButton.setText("Save");
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveButtonMouseClicked(evt);
            }
        });

        phaseCalculation.add(saveButton);

        add(phaseCalculation, java.awt.BorderLayout.SOUTH);

        leafAnalysis.setLayout(new java.awt.GridLayout(1, 2));

        leafAnalysis.setBorder(new javax.swing.border.TitledBorder("Graph Leaves"));
        allowReverse.setText("Include Reverse");
        leafAnalysis.add(allowReverse);

        startAnalysis.setText("Dead Ends");
        startAnalysis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startAnalysisMouseClicked(evt);
            }
        });

        leafAnalysis.add(startAnalysis);

        add(leafAnalysis, java.awt.BorderLayout.NORTH);

    }//GEN-END:initComponents

  private void startAnalysisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startAnalysisMouseClicked
    String alg = new String("SimpleReductionOnlyForward");
    if(allowReverse.isSelected())
          alg = new String("SimpleReduction");
          
      RunAlgorithm runit = new RunAlgorithm(Top,alg,true);
      runit.run();
      runit.showResults();
  }//GEN-LAST:event_startAnalysisMouseClicked

  private void saveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseClicked
      Top.stopSystemProcess();
  }//GEN-LAST:event_saveButtonMouseClicked

  private void startButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startButtonMouseClicked
    Top.startSystemProcess();
  }//GEN-LAST:event_startButtonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton allowReverse;
    private javax.swing.JPanel leafAnalysis;
    private javax.swing.JPanel phaseCalculation;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton startAnalysis;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables

}
