/*
 * FormationClusteringPanel.java
 *
 * Created on February 1, 2002, 1:37 PM
 */

package react.menu;
import react.common.TopReactionMenu;
import blurock.utilities.SetUpClassAttrFile;
import blurock.core.RunAlgorithm;
import blurock.instattr.GetAttributeParameter;
import blurock.instattr.GetSystemLists;
import blurock.coreobjects.RegisteredClasses;
import blurock.coreobjects.DataObjectClass;
import blurock.core.RWManagerString;
import blurock.core.RWManagerBase;
import blurock.CobwebCluster.*;
import utilities.ErrorFrame;
import blurock.core.ObjectDisplayManager;
import java.io.IOException;
import utilities.BaseFrame;
import utilities.OutputFrame;
import utilities.ErrorFrame;
import blurock.core.ObjectNotFoundException;
/**
 *
 * @author  reaction
 * @version 
 */
public class FormationClusteringPanel extends javax.swing.JPanel {
    TopReactionMenu Top;
    SetOfClusterSets clusterSets;
    /** Creates new form FormationClusteringPanel */
    public FormationClusteringPanel(TopReactionMenu top) {
        initComponents ();
        Top = top;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        startPhaseButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        maxClusterLevel = new javax.swing.JSlider();
        jPanel5 = new javax.swing.JPanel();
        selectInstancesButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        dependentVariableField = new javax.swing.JTextField();
        numberOfPredicates = new javax.swing.JSlider();
        jPanel4 = new javax.swing.JPanel();
        clusterButton = new javax.swing.JButton();
        clusterAssingButton = new javax.swing.JButton();
        viewClustersButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridLayout(1, 2));

        jPanel1.setBorder(new javax.swing.border.TitledBorder("Phase of Calculation"));
        jPanel1.setMinimumSize(new java.awt.Dimension(200, 47));
        jPanel1.setPreferredSize(new java.awt.Dimension(200, 47));
        startPhaseButton.setText("Start");
        startPhaseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startPhaseButtonMouseClicked(evt);
            }
        });

        jPanel1.add(startPhaseButton);

        saveButton.setText("Save");
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveButtonMouseClicked(evt);
            }
        });

        jPanel1.add(saveButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(new javax.swing.border.TitledBorder("Maximum Number of Clusters"));
        maxClusterLevel.setMajorTickSpacing(1);
        maxClusterLevel.setMaximum(10);
        maxClusterLevel.setPaintLabels(true);
        maxClusterLevel.setPaintTicks(true);
        maxClusterLevel.setSnapToTicks(true);
        maxClusterLevel.setToolTipText("Maximum Number of Levels");
        maxClusterLevel.setValue(4);
        jPanel2.add(maxClusterLevel, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel2, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridLayout(1, 1));

        jPanel5.setBorder(new javax.swing.border.TitledBorder("Instances"));
        selectInstancesButton.setText("Select Instances");
        selectInstancesButton.setToolTipText("Select Test and Train Instances");
        selectInstancesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectInstancesButtonMouseClicked(evt);
            }
        });

        jPanel5.add(selectInstancesButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel5, gridBagConstraints);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(new javax.swing.border.TitledBorder("Independent Variable Goal Predicate"));
        jPanel3.setName("");
        dependentVariableField.setText("t[msec]");
        dependentVariableField.setToolTipText("Independent Variable Name");
        jPanel3.add(dependentVariableField, java.awt.BorderLayout.WEST);

        numberOfPredicates.setMajorTickSpacing(5);
        numberOfPredicates.setMaximum(20);
        numberOfPredicates.setMinorTickSpacing(1);
        numberOfPredicates.setPaintLabels(true);
        numberOfPredicates.setPaintTicks(true);
        numberOfPredicates.setSnapToTicks(true);
        numberOfPredicates.setToolTipText("Number of Predicates describing independent variable");
        numberOfPredicates.setValue(10);
        jPanel3.add(numberOfPredicates, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridLayout(3, 1));

        jPanel4.setBorder(new javax.swing.border.TitledBorder("Calculate Cluster"));
        clusterButton.setText("Calculate");
        clusterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clusterButtonMouseClicked(evt);
            }
        });

        jPanel4.add(clusterButton);

        clusterAssingButton.setText("Assign Clusters");
        clusterAssingButton.setToolTipText("Assign to each instance a first level cluster assignment");
        clusterAssingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clusterAssingButtonActionPerformed(evt);
            }
        });
        clusterAssingButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clusterAssingButtonMouseClicked(evt);
            }
        });

        jPanel4.add(clusterAssingButton);

        viewClustersButton.setText("View Clusters");
        viewClustersButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewClustersButtonMouseClicked(evt);
            }
        });

        jPanel4.add(viewClustersButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel4, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents

    private void viewClustersButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewClustersButtonMouseClicked
        GetAttributeParameter getparam = new GetAttributeParameter(Top);
        String paramname = new String("CobwebClusterTree");
        boolean success = getparam.getParameterAsString(paramname);
        if(success) {
        RegisteredClasses registered  = Top.registeredClasses;
        String clsname = new String("CobwebClusterTree");
        try {
        //DataCobwebClusterClass clusterclass = new DataCobwebClusterClass(14040,"CobwebClusterTree","Cobweb Cluster Tree");
        DataCobwebClusterClass clusterclass = (DataCobwebClusterClass) registered.findClass(clsname);
        ObjectDisplayManager man = new ObjectDisplayManager(registered);
        BaseDataCobwebCluster cluster = new BaseDataCobwebCluster();
        cluster.Name = "CobwebCluster";
        DBaseDataCobwebCluster dcluster = new DBaseDataCobwebCluster(man,cluster,clusterclass);
        RWManagerString io = new RWManagerString(registered,getparam.outputString);
            cluster.Read(io);
        CobwebClusterMainPanel panel = new CobwebClusterMainPanel(cluster, clusterclass, man,io);
        BaseFrame fr = new BaseFrame(panel,"CobwebTree","CobwebTree","CobwebTree");
        fr.setVisible(true);
         } catch(IOException exp) {
            ErrorFrame fr = new ErrorFrame("Problem with Reading File: \n" + exp.toString());
            fr.show();
        } catch(ObjectNotFoundException ex) {
            ErrorFrame fr = new ErrorFrame("CobwebClusterTree not in classes: \n" + ex.toString());
            fr.show();
        }
        }
    }//GEN-LAST:event_viewClustersButtonMouseClicked

    private void clusterAssingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clusterAssingButtonActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_clusterAssingButtonActionPerformed

    private void clusterAssingButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clusterAssingButtonMouseClicked
      SetUpClassAttrFile ofile = new SetUpClassAttrFile(Top,"CobwebClusteringTest","Test of Cobweb Cluster");
      GetAttributeParameter param = new GetAttributeParameter(Top);
      
      GetSystemLists getlist = new GetSystemLists(Top);
      String[]  train = getlist.getSystemList(Top.SystemParameters.trainInstanceList.getValue());
      
      ofile.printKeyWords(Top.SystemParameters.testInstanceList.getValue(),train);
      ofile.read(true);
      RunAlgorithm run = new RunAlgorithm(Top,"CobwebClusterTestAlg",true);
      run.run();
      RWManagerString rw = new RWManagerString(Top.registeredClasses,run.commandOutput);
      try {
          String divs = determineLevelRegions(rw);
          OutputFrame fr = new OutputFrame(divs);
          fr.show();
      } catch(IOException io) {
          ErrorFrame fr = new ErrorFrame(io.toString());
          fr.show();
      }
      run.showResults();

    }//GEN-LAST:event_clusterAssingButtonMouseClicked
  private String determineLevelRegions(RWManagerBase rw) throws IOException {
            clusterSets = new SetOfClusterSets(rw);
            clusterSets.findRegions();
            String divs = clusterSets.toString();
            return divs;
  }
  private void selectInstancesButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectInstancesButtonMouseClicked
    Top.instanceSets.setVisible(true);
  }//GEN-LAST:event_selectInstancesButtonMouseClicked

  private void clusterButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clusterButtonMouseClicked
      SetUpClassAttrFile ofile = new SetUpClassAttrFile(Top,"CobwebClustering","Calculation of Cobweb Cluster");
      determineMaxLevel(ofile);
      determinePredicates(ofile);
      ofile.read(true);
      RunAlgorithm run = new RunAlgorithm(Top,"CobwebClusterAlg",true);
      run.run();
      run.showResults();
      
  }//GEN-LAST:event_clusterButtonMouseClicked
  private void determineMaxLevel(SetUpClassAttrFile ofile) {
      int max = maxClusterLevel.getValue();
      ofile.printInteger("MaxLevel",max);
  }
  private void determinePredicates(SetUpClassAttrFile ofile) {
      int num = numberOfPredicates.getValue();
      String name = dependentVariableField.getText();
      double dnum = (double) num;
      double max = 1.0;
      double min = 0.0;
      double interval = max/dnum;
      String middlePred = new String("0.0 1.0 0.0  ");
      String startPred = new String("1.0 1.0 0.0  ");
      String endPred = new String("0.0 1.0 1.0  ");
      String form;
      String[] goals = new String[num];
      for(int i=0;i<num;i++) {
          StringBuffer buf = new StringBuffer();
          buf.append("Predicate: " +  name + " Continuous\n");
          buf.append("ODReal -Infinity T +Infinity T PyramidODReal ");
          double center = i*interval;
          double bottom = center - interval;
          double top = center + interval;
          form = middlePred;
          if(i == 0) {
              bottom = center;
              form = startPred;
          } else if(i == num-1) {
              top = center;
              form = endPred;
          }
          String func = new String(bottom + " " + center + " " + top+ "\n");
          buf.append(form + func);
          String predname = new String(name+center);
          goals[i] = predname;
          ofile.printObjectAsString(predname,buf.toString(),"FuzzyParameterPredicate");
      }
      ofile.printKeyWords("GoalNameList",goals);
      String[] logic = new String[1];
      logic[0] = "Continuous";
      ofile.printKeyWords("LogicType",logic);
  }
  private void saveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseClicked
      Top.stopSystemProcess();
  }//GEN-LAST:event_saveButtonMouseClicked

  private void startPhaseButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startPhaseButtonMouseClicked
    Top.history.setToFlame();
    Top.startSystemProcess();
  }//GEN-LAST:event_startPhaseButtonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clusterAssingButton;
    private javax.swing.JButton clusterButton;
    private javax.swing.JTextField dependentVariableField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JSlider maxClusterLevel;
    private javax.swing.JSlider numberOfPredicates;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton selectInstancesButton;
    private javax.swing.JButton startPhaseButton;
    private javax.swing.JButton viewClustersButton;
    // End of variables declaration//GEN-END:variables

}
