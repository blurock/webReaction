/*
 * BensonTablePanel.java
 *
 * Created on November 12, 2004, 11:17 PM
 */

package react.therm;

import javax.swing.table.DefaultTableModel;
import java.math.BigInteger;
import utilities.ErrorFrame;
import java.text.DecimalFormat;

/**
 *
 * @author  reaction
 */
public class BensonTablePanel extends javax.swing.JPanel {
    public int numberCpValues = 0;
    /** Creates new form BensonTablePanel */
    public BensonTablePanel(String molname) {
        initComponents();
        IUPACNameField.setText(molname);
        if(molname.length() > 15) {
            shortNameField.setText(molname.substring(0,15));
        } else{
            shortNameField.setText(molname);
        }
    }
    public void addRow(BigInteger valence, Double Entropy, Double Heat, Double[] Cps) {
       DefaultTableModel tmodel = (DefaultTableModel) ThermoTable.getModel();
       if(numberCpValues == 0) 
           numberCpValues = Cps.length;
       if(Cps.length != numberCpValues) {
           ErrorFrame fr = new ErrorFrame("Number of Cp Values Does not match");
           fr.show();
       } else {
        Object[] objs = new Object[10];
        objs[0] = valence;
        objs[1] = Entropy;
        objs[2] = Heat;
        for(int i=0; i<Cps.length;i++) {
           objs[i+3] = Cps[i];
        }
        tmodel.addRow(objs);
       }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        TotalBensonTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        sumButton = new javax.swing.JButton();
        correctionButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        thermoPanel = new javax.swing.JPanel();
        ThermoTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        IUPAClabel = new javax.swing.JLabel();
        IUPACNameField = new javax.swing.JTextField();
        shortnamelabel = new javax.swing.JLabel();
        shortNameField = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(2, 1));

        jPanel4.setLayout(new java.awt.GridLayout(1, 1));

        TotalBensonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {new Integer(0), new Double(0.0), new Double(0.0), new Double(0.0), new Double(0.0), new Double(0.0), new Double(0.0), new Double(0.0), new Double(0.0), null}
            },
            new String [] {
                "Atom Type", " Entropy (298)", "Enthalpy (298)", "Cp (298)", "Cp (400)", "Cp (500)", "Cp (600)", "Cp (800)", "Cp (1000)", "Cp (1500)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TotalBensonTable.setMaximumSize(new java.awt.Dimension(2147483647, 300));
        jPanel4.add(TotalBensonTable);

        jPanel1.add(jPanel4);

        jPanel2.setLayout(new java.awt.GridLayout(1, 3));

        sumButton.setText("Sum");
        sumButton.setToolTipText("Sum atom results to get molecule value");
        sumButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sumButtonMouseClicked(evt);
            }
        });

        jPanel2.add(sumButton);

        correctionButton.setText("Add Correction");
        correctionButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                correctionButtonMouseClicked(evt);
            }
        });

        jPanel2.add(correctionButton);

        removeButton.setText("Remove Correction");
        removeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeButtonMouseClicked(evt);
            }
        });

        jPanel2.add(removeButton);

        jPanel1.add(jPanel2);

        add(jPanel1, java.awt.BorderLayout.NORTH);

        thermoPanel.setLayout(new java.awt.GridLayout(1, 1));

        ThermoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Atom Type", "Entropy", "Enthalpy", "Cp (298)", " Cp (400)", "Cp (500)", "Cp (600)", "Cp (800)", "Cp (1000)", "Cp (1500)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ThermoTable.setAutoscrolls(false);
        ThermoTable.setMinimumSize(new java.awt.Dimension(200, 100));
        ThermoTable.setPreferredSize(new java.awt.Dimension(750, 200));
        ThermoTable.setTableHeader(null);
        thermoPanel.add(ThermoTable);

        add(thermoPanel, java.awt.BorderLayout.CENTER);

        jPanel3.setLayout(new java.awt.GridLayout(2, 2));

        IUPAClabel.setText("IUPAC Name");
        jPanel3.add(IUPAClabel);

        jPanel3.add(IUPACNameField);

        shortnamelabel.setText("Short Name");
        jPanel3.add(shortnamelabel);

        jPanel3.add(shortNameField);

        add(jPanel3, java.awt.BorderLayout.SOUTH);

    }
    // </editor-fold>//GEN-END:initComponents

    private void removeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeButtonMouseClicked
        DefaultTableModel tmodel = (DefaultTableModel) ThermoTable.getModel();
        int row = ThermoTable.getSelectedRow();
        tmodel.removeRow(row);
    }//GEN-LAST:event_removeButtonMouseClicked

    private void correctionButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_correctionButtonMouseClicked
        DefaultTableModel atomsmodel = (DefaultTableModel) ThermoTable.getModel();
        Object[] row = getInitializedRowValues();
        atomsmodel.addRow(row);
    }//GEN-LAST:event_correctionButtonMouseClicked

    private void sumButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sumButtonMouseClicked
        sumValues();
    }//GEN-LAST:event_sumButtonMouseClicked
    public void sumValues() {
        DefaultTableModel atomsmodel = (DefaultTableModel) ThermoTable.getModel();
        DefaultTableModel totalmodel = (DefaultTableModel) TotalBensonTable.getModel();
        int numrows = atomsmodel.getRowCount();
        int numcols = atomsmodel.getColumnCount();
        for(int col=1;col<numcols;col++) {
            double sum = 0.0;
            for(int row=0;row<numrows;row++) {
                Double value = (Double) atomsmodel.getValueAt(row,col);
                sum = sum + value.doubleValue();
            }
            Double total = new Double(sum);
            //System.out.println("Set Sum ( " + totalmodel.getColumnCount() + ") " + col + " = " + sum);
            totalmodel.setValueAt(total,0,col);
        }
    }
    public void stringSingleBensonTable(StringBuffer outbuf) {
        DefaultTableModel totalmodel = (DefaultTableModel) TotalBensonTable.getModel();
        int numcols = totalmodel.getColumnCount();
        outbuf.append(IUPACNameField.getText() + "\n");
        outbuf.append(" - BensonThermodynamics ");
        for(int col=1;col<numcols;col++) {
            Double value = (Double) totalmodel.getValueAt(0,col);
            DecimalFormat df1 =  new DecimalFormat("#########.000");
            outbuf.append(df1.format(value.doubleValue()) + " ");
        }
        outbuf.append("\n");
        outbuf.append(" - AlternativeNames CHEMKIN " + shortNameField.getText() + "\n");
    }
    public Object[] getInitializedRowValues() {
       Object[] objs = new Object[10];
       objs[0] = new Double(0.0);
       objs[1] = new Double(0.0);
       objs[2] = new Double(0.0);
       for(int i=0; i<numberCpValues;i++) {
           objs[i+3] = new Double(0.0);
       }
       return objs;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField IUPACNameField;
    private javax.swing.JLabel IUPAClabel;
    private javax.swing.JTable ThermoTable;
    private javax.swing.JTable TotalBensonTable;
    private javax.swing.JButton correctionButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton removeButton;
    public javax.swing.JTextField shortNameField;
    private javax.swing.JLabel shortnamelabel;
    private javax.swing.JButton sumButton;
    private javax.swing.JPanel thermoPanel;
    // End of variables declaration//GEN-END:variables
    
}
