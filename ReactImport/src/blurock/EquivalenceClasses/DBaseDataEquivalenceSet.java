/*
 * DBaseDataEquivalenceSet.java
 *
 * Created on June 6, 2005, 5:41 PM
 */

package blurock.EquivalenceClasses;
import blurock.core.ObjectNotFoundException;
import blurock.core.ObjectAsTreeNode;
import blurock.core.ObjectDisplayManager;
import blurock.coreobjects.BaseDataObject;
import blurock.coreobjects.DataObjectClass;
import blurock.coreobjects.DBaseDataObject;
import javax.swing.JPanel;
import java.awt.BorderLayout;
/**
 *
 * @author  reaction
 */
public class DBaseDataEquivalenceSet extends DBaseDataObject {
    
    /** Creates new form DBaseDataEquivalenceSet */
    public DBaseDataEquivalenceSet(ObjectDisplayManager man,BaseDataObject obj,DataObjectClass cls) {
        super(man,obj,cls);
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents

        setLayout(new java.awt.BorderLayout());

    }//GEN-END:initComponents
    public ObjectAsTreeNode objectAsSubTree(ObjectAsTreeNode topnode) {
        ObjectAsTreeNode name = new ObjectAsTreeNode(this);
        topnode.add(name);
        
        BaseDataEquivalentSet obj = (BaseDataEquivalentSet) Object;
        String[] names = obj.ObjectNames.keyWordAsStringArray();
        try {
            DataObjectClass cls = this.displayManager.dataClasses.findClass("Object");
                for(int i=0;i<names.length;i++) {
                    BaseDataObject nodeobject = cls.BaseDataObjectExample();
                    nodeobject.Name = names[i];
                    DBaseDataObject objnode = nodeobject.getDisplayObject(this.displayManager,cls);
                    ObjectAsTreeNode node = new ObjectAsTreeNode(objnode);
                    name.add(node);
                }
        } catch(ObjectNotFoundException ex) {
            System.out.println("Classes not initialized properly");
        }
            
        return name;
    }
    public JPanel objectAsPanel() {
        BaseDataEquivalentSet set = (BaseDataEquivalentSet) Object;
        EquivalenceSetPanel panel = new EquivalenceSetPanel(set);
        add(panel, BorderLayout.CENTER);
        return this;
    }
    public String getType() {
        return OClass.Name;
    }
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
