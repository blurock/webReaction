/*
 * DBaseDataDegreeOfEquivalenceNumeric.java
 *
 * Created on June 6, 2005, 6:05 PM
 */

package blurock.EquivalenceClasses;
import blurock.core.ObjectAsTreeNode;
import blurock.core.ObjectDisplayManager;
import blurock.coreobjects.BaseDataObject;
import blurock.coreobjects.DataObjectClass;
import blurock.coreobjects.DBaseDataObject;
import javax.swing.JPanel;

/**
 *
 * @author  reaction
 */
public class DBaseDataDegreeOfEquivalenceNumeric  extends DBaseDataObject  {
    
    /** Creates new form DBaseDataDegreeOfEquivalenceNumeric */
    public DBaseDataDegreeOfEquivalenceNumeric(ObjectDisplayManager man,BaseDataObject obj,DataObjectClass cls) {
          super(man,obj,cls);
      initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        
        setLayout(new java.awt.BorderLayout());
        
    }//GEN-END:initComponents
     public ObjectAsTreeNode objectAsSubTree(ObjectAsTreeNode topnode) {
        ObjectAsTreeNode name = new ObjectAsTreeNode(this);
        topnode.add(name);
        return name;
    }
    public JPanel objectAsPanel() {
        return this;
    }
    public String getType() {
        return OClass.Name;
    }
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
