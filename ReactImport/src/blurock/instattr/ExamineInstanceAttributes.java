/*
 * ExamineInstanceAttributes.java
 *
 * Created on March 12, 2001, 3:34 PM
 */

package blurock.instattr;
import react.common.TopReactionMenu;
import link.ReactLink;
import blurock.utilities.MenuList;
import utilities.OutputFrame;
/**
 *
 * @author  reaction
 * @version 
 */
public class ExamineInstanceAttributes extends javax.swing.JPanel {
    TopReactionMenu Top;
    /** Creates new form ExamineInstanceAttributes */
    public ExamineInstanceAttributes(TopReactionMenu top) {
        Top = top;
        initComponents ();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        updateInstances = new javax.swing.JButton();
        updateAttributes = new javax.swing.JButton();
        viewAttribute = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        instanceList = new react.utilities.StandardListPanel();
        attributeList = new react.utilities.StandardListPanel();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        updateInstances.setToolTipText("Press to get the update the current set of instances");
        updateInstances.setText("Update Instance List");
        updateInstances.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateInstancesMouseClicked(evt);
            }
        });

        jPanel1.add(updateInstances);

        updateAttributes.setToolTipText("Press to get the attributes for the (first) selected instance");
        updateAttributes.setText("Attributes for Selected Instance");
        updateAttributes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateAttributesMouseClicked(evt);
            }
        });

        jPanel1.add(updateAttributes);

        viewAttribute.setToolTipText("View the selected instance attribute");
        viewAttribute.setText("View Attributes");
        viewAttribute.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewAttributeMouseClicked(evt);
            }
        });

        jPanel1.add(viewAttribute);

        add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.GridLayout(1, 2));

        instanceList.setLayout(new java.awt.FlowLayout());

        jPanel2.add(instanceList);

        attributeList.setLayout(new java.awt.FlowLayout());

        jPanel2.add(attributeList);

        add(jPanel2, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents

  private void viewAttributeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewAttributeMouseClicked
// Add your handling code here:
      String[] inst = instanceList.selectedItemsToString(false);
      String[] attrs = attributeList.selectedItemsToString(false);
      StringBuffer output = new StringBuffer();
      if(inst.length > 0 && attrs.length > 0) {
          for(int i=0;i<inst.length;i++) {
              for(int j=0;j < attrs.length;j++) {
                    GetInstanceAttributeParameter get 
                        = new GetInstanceAttributeParameter(Top);
                    get.getParameterAsString(inst[i],attrs[j]);
                    output.append("\n" + 
                                inst[i] + "(" + 
                                attrs[j] + ") = " +
                                get.outputString + "\n");
              }
          }
          OutputFrame fr = new OutputFrame(output.toString());
          fr.show();
      }
  }//GEN-LAST:event_viewAttributeMouseClicked

  private void updateAttributesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateAttributesMouseClicked
// Add your handling code here:
      String[] inst = instanceList.selectedItemsToString(true);
      if(inst.length > 0) {
        String instancename = inst[0].trim();
        MenuList attrs = Top.InstanceCommon.getInstanceAttributeList(true,instancename);
        attrs.singleCommand = false;
        attributeList.setData(attrs.getNameList());
      }
  }//GEN-LAST:event_updateAttributesMouseClicked

  private void updateInstancesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateInstancesMouseClicked
// Add your handling code here:
        Top.InstanceCommon.getInstanceList(true);
        Top.InstanceCommon.getInstanceAttributeList(true);
        instanceList.setData(Top.InstanceCommon.instanceList.getNameList());
        attributeList.setData(Top.InstanceCommon.instanceAttributeList.getNameList());
  }//GEN-LAST:event_updateInstancesMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private react.utilities.StandardListPanel attributeList;
    private react.utilities.StandardListPanel instanceList;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton updateAttributes;
    private javax.swing.JButton updateInstances;
    private javax.swing.JButton viewAttribute;
    // End of variables declaration//GEN-END:variables

}
