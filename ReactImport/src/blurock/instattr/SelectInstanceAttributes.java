/*
 * SelectInstanceAttributes.java
 *
 * Created on February 18, 2001, 7:32 PM
 */

package blurock.instattr;
import react.common.*;
import blurock.utilities.*;
import blurock.core.RunAlgorithm;
import java.util.StringTokenizer;
import utilities.FileFrame;
import utilities.ReadFileToString;
/**
 *
 * @author  reaction
 * @version 
 */
public class SelectInstanceAttributes extends javax.swing.JPanel {
    TopReactionMenu Top;
    
    /** Creates new form SelectInstanceAttributes */
    public SelectInstanceAttributes(TopReactionMenu top) {
        Top = top;
        initComponents ();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        settingsPanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        update = new javax.swing.JButton();
        setAttributes = new javax.swing.JButton();
        fromFileButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        setSelected = new javax.swing.JRadioButton();
        setByType = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        attributeTypes = new javax.swing.JTextField();
        listsPanel = new javax.swing.JPanel();
        totalAttributeList = new react.utilities.StandardListPanel();
        selectedAttributeList = new react.utilities.StandardListPanel();
        namePanel = new javax.swing.JPanel();
        nameLable = new javax.swing.JLabel();
        listNameTextField = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        settingsPanel.setLayout(new java.awt.GridLayout(3, 1));

        settingsPanel.setBorder(new javax.swing.border.TitledBorder("Settings"));
        settingsPanel.setMinimumSize(new java.awt.Dimension(250, 60));
        jPanel4.setLayout(new java.awt.GridLayout(1, 3));

        update.setText("Update Full List");
        update.setToolTipText("Updates the full list of Attributes");
        update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateTotalList(evt);
            }
        });

        jPanel4.add(update);

        setAttributes.setText("Set Attributes");
        setAttributes.setToolTipText("Sets the full set of attributes (as specified below)");
        setAttributes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                setAttributes(evt);
            }
        });

        jPanel4.add(setAttributes);

        fromFileButton.setText("From File");
        fromFileButton.setToolTipText("set selected attribute from file list");
        fromFileButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fromFileButtonMouseClicked(evt);
            }
        });

        jPanel4.add(fromFileButton);

        settingsPanel.add(jPanel4);

        jPanel5.setLayout(new java.awt.GridLayout(1, 0));

        jLabel3.setText("Attribute Selected");
        jLabel3.setToolTipText("Choose Attribute Selection Method");
        jPanel5.add(jLabel3);

        setSelected.setSelected(true);
        setSelected.setText("Set Selected");
        setSelected.setToolTipText("Set the Attribute List to Selected Instance Attributes");
        setSelected.setActionCommand("");
        setSelected.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                setSelectedMouseClicked(evt);
            }
        });

        jPanel5.add(setSelected);

        setByType.setToolTipText("Set (from selected) Instance Attributes By Type");
        setByType.setLabel("Set By Type");
        setByType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                setByTypeMouseClicked(evt);
            }
        });

        jPanel5.add(setByType);

        settingsPanel.add(jPanel5);

        jPanel6.setLayout(new java.awt.GridLayout(1, 2));

        jLabel2.setText("Attribute Types");
        jLabel2.setToolTipText("Attribute Types (separated by blanks)");
        jPanel6.add(jLabel2);

        attributeTypes.setText("Integer Real");
        attributeTypes.setToolTipText("Separated by Blanks");
        jPanel6.add(attributeTypes);

        settingsPanel.add(jPanel6);

        add(settingsPanel, java.awt.BorderLayout.NORTH);

        listsPanel.setLayout(new java.awt.GridLayout(1, 2));

        totalAttributeList.setLayout(new java.awt.FlowLayout());

        totalAttributeList.setBorder(new javax.swing.border.TitledBorder("All Attributes"));
        listsPanel.add(totalAttributeList);

        selectedAttributeList.setLayout(new java.awt.FlowLayout());

        selectedAttributeList.setBorder(new javax.swing.border.TitledBorder("Selected Attributes"));
        listsPanel.add(selectedAttributeList);

        add(listsPanel, java.awt.BorderLayout.CENTER);

        namePanel.setLayout(new java.awt.GridLayout(1, 2));

        nameLable.setText("Attribute List Name");
        namePanel.add(nameLable);

        listNameTextField.setText("AttributeList");
        namePanel.add(listNameTextField);

        add(namePanel, java.awt.BorderLayout.SOUTH);

    }
    // </editor-fold>//GEN-END:initComponents

    private void fromFileButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fromFileButtonMouseClicked
        ReadFileToString file = new ReadFileToString();
        FileFrame ffr = new FileFrame("Read Attribute List from File",".","*.dat");
        boolean success = ffr.getFile();
        if(success) {
            file.read(ffr.chosenFile);
            StringTokenizer tok = new StringTokenizer(file.outputString);
            int count = tok.countTokens();
            String[] names = new String[count];
            int i = 0;
            while(tok.hasMoreTokens()) {
                names[i] = tok.nextToken();
                i++;
            }
            selectedAttributeList.setData(names);
            setAttributeList();
        }
    }//GEN-LAST:event_fromFileButtonMouseClicked

  private void setByTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_setByTypeMouseClicked
// Add your handling code here:
      setSelected.setSelected(!setByType.isSelected());
  }//GEN-LAST:event_setByTypeMouseClicked

  private void setSelectedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_setSelectedMouseClicked
// Add your handling code here:
      setByType.setSelected(!setSelected.isSelected());
  }//GEN-LAST:event_setSelectedMouseClicked

  private void setAttributes(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_setAttributes
// Add your handling code here:
    setAttributeList();
  }//GEN-LAST:event_setAttributes
 public void setAttributeList(){
      SetUpClassAttrFile f = new SetUpClassAttrFile(Top,listNameTextField.getText(),"Instance Attribute Setup");
     String attrspec = setUpAttributeInput(f);
     RunAlgorithm runit = new RunAlgorithm(Top,attrspec,false);
     runit.run();
     GetSystemLists syslist = new GetSystemLists(Top);
     String[] names = syslist.getSystemList("AttributeNames");
     selectedAttributeList.setData(names);
     updateUI();
 }
 protected String setUpAttributeInput(SetUpClassAttrFile f) {
    String attrspec = null; 
    if(setSelected.isSelected()) {
       f.printKeyWords("AttributeSpecs",totalAttributeList.selectedItemsToString(true));
       f.read(false);
       attrspec = "AttributeByNameAlg";
    } else {
       StringTokenizer specs = new StringTokenizer(attributeTypes.getText());
       int count = 0;
       String[] s = new String[20];
       
       while(specs.hasMoreTokens() && count < 20) {
              s[count] = specs.nextToken();
       }
       String[] speckeys = new String[count];
       for(int j=1;j<count;j++)
           speckeys[j] = s[j];   
      f.printKeyWords("AttributeSpecs",speckeys);
      f.read(false);
      attrspec = "AttributeByTypeAlg";
      }
   return attrspec;
 }
  private void updateTotalList(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateTotalList
// Add your handling code here:
      MenuList attrs = Top.InstanceCommon.getInstanceAttributeList(true);
      String[] names = attrs.getNameList();
      totalAttributeList.setData(names);
      updateUI();
  }//GEN-LAST:event_updateTotalList
  public String[] getSelectedAttributes() {
      return selectedAttributeList.selectedItemsToString(true);
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField attributeTypes;
    private javax.swing.JButton fromFileButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    protected javax.swing.JTextField listNameTextField;
    private javax.swing.JPanel listsPanel;
    private javax.swing.JLabel nameLable;
    private javax.swing.JPanel namePanel;
    protected react.utilities.StandardListPanel selectedAttributeList;
    private javax.swing.JButton setAttributes;
    private javax.swing.JRadioButton setByType;
    private javax.swing.JRadioButton setSelected;
    private javax.swing.JPanel settingsPanel;
    protected react.utilities.StandardListPanel totalAttributeList;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

}
