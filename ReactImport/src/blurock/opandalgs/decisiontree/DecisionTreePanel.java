/*
 * DecisionTreePanel.java
 *
 * Created on August 8, 2004, 12:07 PM
 */

package blurock.opandalgs.decisiontree;
import java.io.IOException;
import react.common.TopReactionMenu;
import blurock.utilities.SetUpClassAttrFile;
import blurock.core.RunAlgorithm;
import blurock.instattr.GetAttributeParameter;
import blurock.core.RWManagerString;
import blurock.DecisionTree.*;
import blurock.utilities.BaseScrollFrame;
import utilities.ErrorFrame;
/**
 *
 * @author  reaction
 */
public class DecisionTreePanel extends javax.swing.JPanel {
        TopReactionMenu Top;
    /** Creates new form DecisionTreePanel */
    public DecisionTreePanel(TopReactionMenu top) {
        Top = top;
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        minimumInstancesSlider = new javax.swing.JSlider();
        jPanel3 = new javax.swing.JPanel();
        partitionPercentSlider = new javax.swing.JSlider();
        jPanel4 = new javax.swing.JPanel();
        minimumEntopyPercentSlider = new javax.swing.JSlider();
        jPanel5 = new javax.swing.JPanel();
        maximumNumberOfNodesSlider = new javax.swing.JSlider();
        jPanel6 = new javax.swing.JPanel();
        browsePartitionNameButton = new javax.swing.JButton();
        partitionNameField = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        instanceSetButton = new javax.swing.JButton();
        decisionTreeButton = new javax.swing.JButton();
        manipulateButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(5, 1));

        jPanel1.setBorder(new javax.swing.border.TitledBorder("Algorithm Parameters"));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(new javax.swing.border.TitledBorder("Minimum Number of Instances on a node"));
        minimumInstancesSlider.setMajorTickSpacing(20);
        minimumInstancesSlider.setMinorTickSpacing(5);
        minimumInstancesSlider.setPaintLabels(true);
        minimumInstancesSlider.setPaintTicks(true);
        minimumInstancesSlider.setSnapToTicks(true);
        minimumInstancesSlider.setValue(10);
        jPanel2.add(minimumInstancesSlider, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.X_AXIS));

        jPanel3.setBorder(new javax.swing.border.TitledBorder("Partition Percent"));
        partitionPercentSlider.setMajorTickSpacing(20);
        partitionPercentSlider.setMinorTickSpacing(5);
        partitionPercentSlider.setPaintLabels(true);
        partitionPercentSlider.setPaintTicks(true);
        partitionPercentSlider.setSnapToTicks(true);
        partitionPercentSlider.setValue(95);
        jPanel3.add(partitionPercentSlider);

        jPanel1.add(jPanel3);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel4.setBorder(new javax.swing.border.TitledBorder("Minimum Entropy Percent"));
        minimumEntopyPercentSlider.setMajorTickSpacing(20);
        minimumEntopyPercentSlider.setMinorTickSpacing(5);
        minimumEntopyPercentSlider.setPaintLabels(true);
        minimumEntopyPercentSlider.setPaintTicks(true);
        minimumEntopyPercentSlider.setValue(2);
        jPanel4.add(minimumEntopyPercentSlider, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel4);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel5.setBorder(new javax.swing.border.TitledBorder("Maximum number of Nodes in Decision Tree"));
        maximumNumberOfNodesSlider.setMajorTickSpacing(20);
        maximumNumberOfNodesSlider.setMinorTickSpacing(5);
        maximumNumberOfNodesSlider.setPaintLabels(true);
        maximumNumberOfNodesSlider.setPaintTicks(true);
        maximumNumberOfNodesSlider.setValue(30);
        jPanel5.add(maximumNumberOfNodesSlider, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel5);

        jPanel6.setLayout(new java.awt.GridLayout(1, 2));

        jPanel6.setBorder(new javax.swing.border.TitledBorder("Decision Tree Goal Partition"));
        browsePartitionNameButton.setText("Partion Name");
        browsePartitionNameButton.setToolTipText("Browse for Partition Name");
        jPanel6.add(browsePartitionNameButton);

        partitionNameField.setText("ComparePartition");
        jPanel6.add(partitionNameField);

        jPanel1.add(jPanel6);

        add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel7.setLayout(new java.awt.GridLayout(3, 1));

        jPanel7.setBorder(new javax.swing.border.TitledBorder("Decision Tree"));
        instanceSetButton.setText("Set Train Instance Set");
        instanceSetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                instanceSetButtonMouseClicked(evt);
            }
        });

        jPanel7.add(instanceSetButton);

        decisionTreeButton.setText("Calculate Decision Tree");
        decisionTreeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                decisionTreeButtonMouseClicked(evt);
            }
        });

        jPanel7.add(decisionTreeButton);

        manipulateButton.setText("Decision Tree Manipulations");
        manipulateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                manipulateButtonMouseClicked(evt);
            }
        });

        jPanel7.add(manipulateButton);

        add(jPanel7, java.awt.BorderLayout.SOUTH);

    }//GEN-END:initComponents

    private void manipulateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manipulateButtonMouseClicked
      GetAttributeParameter param = new GetAttributeParameter(Top);
          try {
          boolean success = param.getParameterAsString("DecisionTree");
          if(!success)
              throw new IOException();
          RWManagerString rw  = new RWManagerString(Top.registeredClasses,param.outputString);
          BaseDataDecisionTree tree = new BaseDataDecisionTree();
          tree.Read(rw);

          DecisionTreeDrawPanel treepanel = new DecisionTreeDrawPanel(tree,Top.registeredClasses);
          BaseScrollFrame decframe = new BaseScrollFrame(treepanel,"DecisionTree",
                            "DecisionTree operations and manipulations",
                            "DecisionTree");
          decframe.show();
          } catch(IOException ex) {
              ErrorFrame fr = new ErrorFrame("DecisionTree not successfully formed");
          }
    }//GEN-LAST:event_manipulateButtonMouseClicked

    private void instanceSetButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_instanceSetButtonMouseClicked
        Top.instanceSets.setVisible(true);
    }//GEN-LAST:event_instanceSetButtonMouseClicked

    private void decisionTreeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_decisionTreeButtonMouseClicked
        updateDataAttributes();
        String minimumInstancesS = "DecisionTreeMinimumInstances";
        String partitionPercentS = "DecisionTreePartitionPercent";
        String minimumEntropyS = "DecisionTreeMinimumEntropy";
        String maximumNumberOfNodesS = "DecisionTreeMaximumNodes";
        String partitionNameS = "EntropyGoal";

        SetUpClassAttrFile ofile = new SetUpClassAttrFile(Top,"DecisionTree","Create Decision Tree");
      ofile.printInteger(minimumInstancesS,minimumInstances);
      ofile.printReal(partitionPercentS,partitionPercent);
      ofile.printReal(minimumEntropyS,minimumEntropy);
      ofile.printInteger(maximumNumberOfNodesS,maximumNumberOfNodes);
      String par[] = new String[1];
      par[0] = partitionName;
      ofile.printKeyWords(partitionNameS,par);
      ofile.read(true);
      
      RunAlgorithm run = new RunAlgorithm(Top,"DecisionTreeAlg",true);
      run.run();
      run.showResults();

    }//GEN-LAST:event_decisionTreeButtonMouseClicked
    void updateDataAttributes() {
        minimumInstances = minimumInstancesSlider.getValue();
        double partpercent = (double) partitionPercentSlider.getValue();
        partitionPercent = partpercent/100.0;
        double minEntropypercent = (double) minimumEntopyPercentSlider.getValue();
        minimumEntropy = minEntropypercent/100.0;
        maximumNumberOfNodes = maximumNumberOfNodesSlider.getValue();
        partitionName = partitionNameField.getText();
    }
    int minimumInstances;
    double partitionPercent;
    double minimumEntropy;
    int maximumNumberOfNodes;
    String partitionName;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton decisionTreeButton;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton browsePartitionNameButton;
    private javax.swing.JSlider minimumEntopyPercentSlider;
    private javax.swing.JButton manipulateButton;
    private javax.swing.JButton instanceSetButton;
    private javax.swing.JSlider maximumNumberOfNodesSlider;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSlider partitionPercentSlider;
    private javax.swing.JTextField partitionNameField;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSlider minimumInstancesSlider;
    // End of variables declaration//GEN-END:variables
    
}
