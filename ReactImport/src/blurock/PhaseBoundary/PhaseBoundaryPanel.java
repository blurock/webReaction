/*
 * PhaseBoundaryPanel.java
 *
 * Created on September 29, 2004, 2:49 PM
 */

package blurock.PhaseBoundary;
import java.io.File;
import java.io.IOException;
import utilities.ErrorFrame;
import utilities.FileFrame;
import javax.swing.table.DefaultTableModel;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.ListSelectionEvent;
import java.awt.Dimension;
import javax.swing.table.JTableHeader;
import javax.swing.JTable;
import ignition.SetOfRanges;
import java.util.ArrayList;
import ignition.XMatrix;
import ignition.PointRange;
import blurock.SeparateUnderCondition.DetermineCondition;
import blurock.DecisionTree.DetermineReactivePhase;
/**
 *
 * @author  reaction
 */
public class PhaseBoundaryPanel extends javax.swing.JPanel {
    JTable fileTable;
    XMatrix[] XMatrixRuns;
    /** Creates new form PhaseBoundaryPanel */
    public PhaseBoundaryPanel(JTable fileinfo, XMatrix[] runs) {
        initComponents();
        fileTable = fileinfo;
        XMatrixRuns = runs;
        
        javax.swing.table.TableColumn column = phaseBoundaryTable.getColumnModel().getColumn(0);
        column = phaseBoundaryTable.getColumnModel().getColumn(0);
        column.setPreferredWidth(200);
        column = phaseBoundaryTable.getColumnModel().getColumn(1);
        column.setPreferredWidth(50);
        column = phaseBoundaryTable.getColumnModel().getColumn(2);
        column.setPreferredWidth(100);
        column = phaseBoundaryTable.getColumnModel().getColumn(3);
        column.setPreferredWidth(100);

        //JTableHeader header =   phaseBoundaryTable.getTableHeader();
        //jPanel1.add(header,java.awt.BorderLayout.NORTH);  
    }
    public void computeBoundaries() {
        DefaultTableModel phasemodel = (DefaultTableModel) phaseBoundaryTable.getModel();
        int rcount = phasemodel.getRowCount();
        System.out.println("phase boundaries  (before)" +phasemodel.getRowCount());
        for(int i=rcount-1;i >= 0 ;i--) {
            System.out.println("Remove row: " + i);
            phasemodel.removeRow(i);
        }
        System.out.println("phase boundaries  " +phasemodel.getRowCount());
        
        DefaultTableModel tmodel = (DefaultTableModel) fileTable.getModel();
       int numRuns = tmodel.getRowCount();
       for(int r=0;r<numRuns;r++) {
           System.out.println("Run: " + r);
           XMatrix XM = XMatrixRuns[r];
           Object obj = tmodel.getValueAt(r,0);
           System.out.println(obj);
           System.out.println(obj.getClass());
           String Xname = (String) tmodel.getValueAt(r,0).toString();
           String GNname = (String) tmodel.getValueAt(r,1).toString();
           System.out.println("Run: " + Xname);
           
           DetermineReactivePhase phasecond = new DetermineReactivePhase();
           AssignIntegerPhases assign = new AssignIntegerPhases(phasecond);
           ArrayList set = assign.assignRanges(XM);
           for(int i=0;i<set.size();i++) {
               SetOfRanges ranges = (SetOfRanges) set.get(i);
               addRangeRows(r,GNname,i,ranges);
           }
       }
    }
    void addRangeRows(int num,String Xname,int phase,SetOfRanges ranges) {
        DefaultTableModel tmodel = (DefaultTableModel) phaseBoundaryTable.getModel();
        Integer countI = new Integer(num);
        Integer phaseI = new Integer(phase);
        for(int i=0;i<ranges.size();i++) {
          PointRange range = (PointRange) ranges.elementAt(i);
          if(range.Condition) {
              Double lower = new Double(range.LowerBoundary);
              Double upper = new Double(range.UpperBoundary);
              Boolean condition = new Boolean(range.Condition);
              tmodel.addRow(new Object[] {Xname,phaseI,lower,upper,condition});
          }
        }
        int rowCount = phaseBoundaryTable.getRowCount();
        tmodel.fireTableRowsInserted(rowCount,rowCount);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        phaseBoundaryTable = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        phaseBoundaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        phaseBoundaryTable.setTableHeader(null);
        jScrollPane1.setViewportView(phaseBoundaryTable);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.NORTH);

        add(jPanel1, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable phaseBoundaryTable;
    // End of variables declaration//GEN-END:variables
    
}
