/*
 * ConversionFactorsPanel.java
 *
 * Created on April 11, 2006, 10:20 PM
 */

package blurock.ThermoProps;

/**
 *
 * @author  reaction
 */
public class ConversionFactorsPanel extends javax.swing.JPanel {
    /** Creates new form ConversionFactorsPanel */
    RxnDataConversionFactors factors;
    public ConversionFactorsPanel(RxnDataConversionFactors f) {
        factors = f;
        initComponents();
        updateField();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        factorPanel = new javax.swing.JPanel();
        typeLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        multFactorLabel = new javax.swing.JLabel();
        multField = new javax.swing.JTextField();
        addFactorLabel = new javax.swing.JLabel();
        addField = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        factorPanel.setLayout(new java.awt.GridLayout(3, 2));

        factorPanel.setBorder(new javax.swing.border.TitledBorder("Conversion Factors"));
        typeLabel.setText(factors.Type);
        factorPanel.add(typeLabel);

        nameField.setText(factors.Name);
        nameField.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                nameFieldInputMethodTextChanged(evt);
            }
        });

        factorPanel.add(nameField);

        multFactorLabel.setText("Multiplicative Factor");
        factorPanel.add(multFactorLabel);

        multField.setText("1.0\n");
        factorPanel.add(multField);

        addFactorLabel.setText("Additive Factor");
        factorPanel.add(addFactorLabel);

        addField.setText("0.0");
        factorPanel.add(addField);

        add(factorPanel, java.awt.BorderLayout.CENTER);

    }
    // </editor-fold>//GEN-END:initComponents

    private void nameFieldInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_nameFieldInputMethodTextChanged

        factors.Name = nameField.getText();
    }//GEN-LAST:event_nameFieldInputMethodTextChanged
    void updateField() {
        multField.setText(Double.toString(factors.getMultiplicativeFactor()));
        addField.setText(Double.toString(factors.getAdditiveFactor()));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addFactorLabel;
    private javax.swing.JTextField addField;
    private javax.swing.JPanel factorPanel;
    private javax.swing.JLabel multFactorLabel;
    private javax.swing.JTextField multField;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables
    
}
