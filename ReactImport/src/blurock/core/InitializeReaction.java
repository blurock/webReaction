/*
 * InitializeReaction.java
 *
 * Created on April 1, 2000, 3:06 PM
 */

package blurock.core;
import react.common.TopReactionMenu;
import utilities.ErrorFrame;
import java.io.IOException;

/**
 *
 * @author  reaction
 * @version 
 */
public class InitializeReaction extends javax.swing.JPanel {
    TopReactionMenu Top;

    /** Creates new form InitializeReaction */
    public InitializeReaction(TopReactionMenu top) {
        Top = top;
        initComponents ();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        runInitialization = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        basicInitial = new javax.swing.JRadioButton();
        mechanismAlgorithm = new javax.swing.JRadioButton();
        moleculeInit = new javax.swing.JRadioButton();
        chemkinInit = new javax.swing.JRadioButton();
        equilibriumInit = new javax.swing.JRadioButton();
        reactionInit = new javax.swing.JRadioButton();
        mechanismInit = new javax.swing.JRadioButton();
        setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        
        runInitialization.setToolTipText("Run the initialization ");
        runInitialization.setText("Initialize");
        runInitialization.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                runInitializationMouseClicked(evt);
            }
        }
        );
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(runInitialization, gridBagConstraints1);
        
        
        jPanel1.setLayout(new java.awt.GridLayout(7, 1));
        
        basicInitial.setToolTipText("Initialize whole REACTION");
          basicInitial.setSelected(true);
          basicInitial.setText("Basic Initialization");
          jPanel1.add(basicInitial);
          
          
        mechanismAlgorithm.setToolTipText("Run mechanism algorithm");
          mechanismAlgorithm.setSelected(true);
          mechanismAlgorithm.setText("Mechanism Algorithm");
          jPanel1.add(mechanismAlgorithm);
          
          
        moleculeInit.setLabel("Molecule");
          moleculeInit.setSelected(true);
          jPanel1.add(moleculeInit);
          
          
        chemkinInit.setSelected(true);
          chemkinInit.setText("Chemkin");
          jPanel1.add(chemkinInit);
          
          
        equilibriumInit.setSelected(true);
          equilibriumInit.setText("Equilibrium");
          jPanel1.add(equilibriumInit);
          
          
        reactionInit.setSelected(true);
          reactionInit.setText("Reaction");
          jPanel1.add(reactionInit);
          
          
        mechanismInit.setSelected(true);
          mechanismInit.setText("Mechanism");
          jPanel1.add(mechanismInit);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel1, gridBagConstraints1);
        
    }//GEN-END:initComponents

  private void runInitializationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_runInitializationMouseClicked
// Add your handling code here:  
  if(basicInitial.isSelected()) {
      Top.initializeSystemIfNeeded();
      }
  //Top.startSystemProcess();
  
  if(mechanismAlgorithm.isSelected()) {
      
        StringBuffer output = new StringBuffer();
          ReadFile fread0 = new ReadFile(Top,
                        buildClassFileName(Top.SystemInfo.initBaseAlg.getValue()),
                        buildAttrFileName(Top.SystemInfo.initBaseAlg.getValue()),
                        false);
          output.append(fread0.commandOutput);
         ReadFile fread1 = new ReadFile(Top,
                        buildClassFileName(Top.SystemInfo.initMoleculeAlg.getValue()),
                        buildAttrFileName(Top.SystemInfo.initMoleculeAlg.getValue()),
                        false);
          output.append(fread1.commandOutput);
         ReadFile fread2 = new ReadFile(Top,
                        buildClassFileName(Top.SystemInfo.initReactionAlg.getValue()),
                        buildAttrFileName(Top.SystemInfo.initReactionAlg.getValue()),
                        false);
          output.append(fread2.commandOutput);
          ReadFile fread3 = new ReadFile(Top,
                        buildClassFileName(Top.SystemInfo.initMechanismAlg.getValue()),
                        buildAttrFileName(Top.SystemInfo.initMechanismAlg.getValue()),
                        false);
          output.append(fread3.commandOutput);
         ErrorFrame fr3 = new ErrorFrame(output.toString());
         fr3.show();
         RunCommand runit2 = new RunCommand(Top,"SetAlgorithmClass MechanismAlgorithmRun",false);
     }
  if(moleculeInit.isSelected()) {
         ReadFile fread = new ReadFile(Top,
                        buildClassFileName(Top.SystemInfo.initMolecule.getValue()),
                        buildAttrFileName(Top.SystemInfo.initMolecule.getValue()),
                        false);
         ReadFile fread1 = new ReadFile(Top,
                        buildClassFileName(Top.SystemInfo.moleculeDBInit.getValue()),
                        buildAttrFileName(Top.SystemInfo.moleculeDBInit.getValue()),
                        false);
       ErrorFrame fr = new ErrorFrame(fread.commandOutput + "\n" + fread1.commandOutput);
       fr.show();
       
  }
  if(reactionInit.isSelected()) {
         ReadFile fread = new ReadFile(Top,
                        buildClassFileName(Top.SystemInfo.initReaction.getValue()),
                        buildAttrFileName(Top.SystemInfo.initReaction.getValue()),
                        false);
         ReadFile fread1 = new ReadFile(Top,
                        buildClassFileName(Top.SystemInfo.reactionDBInit.getValue()),
                        buildAttrFileName(Top.SystemInfo.reactionDBInit.getValue()),
                        false);
      ErrorFrame fr = new ErrorFrame(fread.commandOutput + "\n" + fread1.commandOutput);
      fr.show();
       
  }
  if(mechanismInit.isSelected()) {
      ReadFile fread = new ReadFile(Top,
                        buildClassFileName(Top.SystemInfo.initMechanism.getValue()),
                        buildAttrFileName(Top.SystemInfo.initMechanism.getValue()),
                        false);
      ReadFile fread1 = new ReadFile(Top,
                        buildClassFileName(Top.SystemInfo.mechanismDBInit.getValue()),
                        buildAttrFileName(Top.SystemInfo.mechanismDBInit.getValue()),
                        false);
      ErrorFrame fr = new ErrorFrame(fread.commandOutput);
      fr.show();
       
  }
  if(chemkinInit.isSelected()) {
      
          ReadFile fread = new ReadFile(Top,
                        buildClassFileName(Top.SystemInfo.initChemkin.getValue()),
                        buildAttrFileName(Top.SystemInfo.initChemkin.getValue()),
                        false);
     ErrorFrame fr = new ErrorFrame(fread.commandOutput);
     fr.show();
       
         //readRegistered(Top.SystemInfo.initChemkin.getValue());
 }
  if(equilibriumInit.isSelected()) {
      
          ReadFile fread = new ReadFile(Top,
                        buildClassFileName(Top.SystemInfo.initEquilibrium.getValue()),
                        buildAttrFileName(Top.SystemInfo.initEquilibrium.getValue()),
                        false);
       /*
         readRegistered(Top.SystemInfo.initEquilibrium.getValue());
        */
     ErrorFrame fr = new ErrorFrame(fread.commandOutput);
     fr.show();
  }
  }//GEN-LAST:event_runInitializationMouseClicked
  void readRegistered(String base) {
        String clsFile = new String(Top.SystemInfo.initializeDirectory.getValue() +
                                        "registry/" + base + "Class.inp");
        try {
            Top.readWriteManager.openInputFile(clsFile);
            Top.registeredClasses.Read(Top.readWriteManager);
            Top.readWriteManager.closeInputFile();
        } catch(IOException exp) {
            ErrorFrame fr = new ErrorFrame("Problem with Reading File: \n" + 
                                            clsFile + "\n" + exp.toString());
            fr.show();
        }
  }
  String buildClassFileName(String base) {
      String dir = Top.SystemInfo.initializeDirectory.getValue();
      return dir + base + "Class.inp";
  }
  String buildAttrFileName(String base) {
      String dir = Top.SystemInfo.initializeDirectory.getValue();
      return dir + base + ".inp";
  }


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton runInitialization;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JRadioButton basicInitial;
  private javax.swing.JRadioButton mechanismAlgorithm;
  private javax.swing.JRadioButton moleculeInit;
  private javax.swing.JRadioButton chemkinInit;
  private javax.swing.JRadioButton equilibriumInit;
  private javax.swing.JRadioButton reactionInit;
  public javax.swing.JRadioButton mechanismInit;
  // End of variables declaration//GEN-END:variables

}
