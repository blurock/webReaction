/*
 * ManipulateModule.java
 *
 * Created on February 21, 2001, 5:24 PM
 */

package blurock.core;
import xml.*;

/**
 *
 * @author Edward S. Blurock
 * @version
 */
public class ManipulateModule extends javax.swing.JPanel {

        XMLOptions xmlOptions;
    /** Creates new form ManipulateModule
     * @param opt 
 */
    public ManipulateModule(XMLOptions opt) {
        xmlOptions = opt;
        initComponents ();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        names = new blurock.core.PackageModuleChooser();
        jPanel1 = new javax.swing.JPanel();
        runMake = new javax.swing.JButton();
        cleanButton = new javax.swing.JButton();
        transferLib = new javax.swing.JButton();
        mergeModule = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        runExample = new javax.swing.JButton();
        setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(names, gridBagConstraints1);
        
        
        jPanel1.setLayout(new java.awt.GridLayout(6, 1));
        jPanel1.setBorder(new javax.swing.border.TitledBorder("Module Operations"));
        
        runMake.setToolTipText("Make Module Library");
          runMake.setText("Make Library");
          runMake.addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  runMakeMouseClicked(evt);
              }
          }
          );
          jPanel1.add(runMake);
          
          
        cleanButton.setToolTipText("Clean Development Directory Library");
          cleanButton.setText("Clean");
          cleanButton.addKeyListener(new java.awt.event.KeyAdapter() {
              public void keyPressed(java.awt.event.KeyEvent evt) {
                  cleanButtonKeyPressed(evt);
              }
          }
          );
          jPanel1.add(cleanButton);
          
          
        transferLib.setToolTipText("Transfer Library to main System");
          transferLib.setText("Transfer Library");
          transferLib.addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  transferLibMouseClicked(evt);
              }
          }
          );
          jPanel1.add(transferLib);
          
          
        mergeModule.setToolTipText("Merge Source Files into main system");
          mergeModule.setText("Merge");
          mergeModule.addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  mergeModuleMouseClicked(evt);
              }
          }
          );
          jPanel1.add(mergeModule);
          
          
        removeButton.setToolTipText("Remove Module from System");
          removeButton.setText("Remove");
          removeButton.addKeyListener(new java.awt.event.KeyAdapter() {
              public void keyPressed(java.awt.event.KeyEvent evt) {
                  removeButtonKeyPressed(evt);
              }
          }
          );
          jPanel1.add(removeButton);
          
          
        runExample.setToolTipText("Run the standard example");
          runExample.setText("Run");
          jPanel1.add(runExample);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel1, gridBagConstraints1);
        
    }//GEN-END:initComponents

/**
 * @param evt
 */    
  private void cleanButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cleanButtonKeyPressed
// Add your handling code here:
      String command = createMakeCommand("clean");
     RunScriptWithOutput scr = new RunScriptWithOutput(xmlOptions.tLink);
      scr.run(command,true);      
  }//GEN-LAST:event_cleanButtonKeyPressed

  private void removeButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_removeButtonKeyPressed
// Add your handling code here:
      String command = createMakeCommand("remove");
     RunScriptWithOutput scr = new RunScriptWithOutput(xmlOptions.tLink);
      scr.run(command,true);      
  }//GEN-LAST:event_removeButtonKeyPressed

  private void mergeModuleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mergeModuleMouseClicked
// Add your handling code here:
      String command = createMakeCommand("merge");
     RunScriptWithOutput scr = new RunScriptWithOutput(xmlOptions.tLink);
      scr.run(command,true);      
  }//GEN-LAST:event_mergeModuleMouseClicked

  private void transferLibMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transferLibMouseClicked
// Add your handling code here:
      String command = createMakeCommand("transfer");
      RunScriptWithOutput scr = new RunScriptWithOutput(xmlOptions.tLink);
      scr.run(command,true);      
  }//GEN-LAST:event_transferLibMouseClicked
/**
 * @param command
 * @return
 */  
    private String createMakeCommand(String command) {
      String makeit = xmlOptions.defaultDirectories.xmlDirectory.getValue() + 
                    "/scripts/" +
                    xmlOptions.standardScripts.manipulateModule.getValue() + " " +
                    names.packageName.getText() + " " +
                    names.moduleName.getText() + " " +
                    command + " " +
                    xmlOptions.defaultDirectories.currentDevDirectory.getValue();
      System.out.println(makeit);
      return makeit;
    }
  private void runMakeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_runMakeMouseClicked
// Add your handling code here:
      String command = createMakeCommand("all");
      RunScriptWithOutput scr = new RunScriptWithOutput(xmlOptions.tLink);
      scr.run(command,true);      
  }//GEN-LAST:event_runMakeMouseClicked


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private blurock.core.PackageModuleChooser names;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JButton runMake;
  private javax.swing.JButton cleanButton;
  private javax.swing.JButton transferLib;
  private javax.swing.JButton mergeModule;
  private javax.swing.JButton removeButton;
  private javax.swing.JButton runExample;
  // End of variables declaration//GEN-END:variables

}
