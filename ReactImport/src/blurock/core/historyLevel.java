/*
 * historyLevel.java
 *
 * Created on February 10, 2001, 8:50 AM
 */

package blurock.core;
import react.common.TopReactionMenu;

/** This manages the history level of the REACTION system
 *
 * @author Edward S. Blurock
 *
 * @version 1
 *
 */
public class historyLevel extends javax.swing.JPanel {
    TopReactionMenu Top;
    /** Creates new form historyLevel
 */
    public historyLevel(TopReactionMenu top) {
        Top = top;
        initComponents ();
        setToReaction();
        setHistoryLevel(0);
        changeHistory.setSelected(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel2 = new javax.swing.JPanel();
        changeHistory = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        debugSlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        historyName = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        historyLevel = new javax.swing.JSlider();
        jPanel5 = new javax.swing.JPanel();
        projectDirButton = new javax.swing.JButton();
        projectDirectory = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        analysisRun = new javax.swing.JRadioButton();
        reactionRun = new javax.swing.JRadioButton();
        flameRun = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        startButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        quitButton = new javax.swing.JButton();
        setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        setBorder(new javax.swing.border.TitledBorder("History Level"));
        
        jPanel2.setLayout(new java.awt.GridLayout(2, 2));
        
        changeHistory.setToolTipText("If set, the history is updated when requested");
          changeHistory.setLabel("History Update");
          jPanel2.add(changeHistory);
          
          
        jPanel3.setLayout(new java.awt.GridLayout(1, 2));
          
          jLabel2.setText("Debug");
            jPanel3.add(jLabel2);
            
            
          debugSlider.setSnapToTicks(true);
            debugSlider.setPreferredSize(new java.awt.Dimension(50, 16));
            debugSlider.setMinorTickSpacing(1);
            debugSlider.setPaintLabels(true);
            debugSlider.setPaintTicks(true);
            debugSlider.setMajorTickSpacing(5);
            debugSlider.setMaximum(5);
            debugSlider.setValue(0);
            jPanel3.add(debugSlider);
            
            jPanel2.add(jPanel3);
          
          
        jLabel1.setText("History Name");
          jLabel1.setToolTipText("The name of the set of history levels");
          jPanel2.add(jLabel1);
          
          
        historyName.setText("test");
          jPanel2.add(historyName);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel2, gridBagConstraints1);
        
        
        jPanel1.setLayout(new java.awt.GridLayout(2, 1));
        jPanel1.setBorder(new javax.swing.border.TitledBorder(""));
        
        historyLevel.setSnapToTicks(true);
          historyLevel.setName("history");
          historyLevel.setMinimumSize(new java.awt.Dimension(150, 39));
          historyLevel.setMinorTickSpacing(1);
          historyLevel.setPaintLabels(true);
          historyLevel.setPaintTicks(true);
          historyLevel.setMajorTickSpacing(2);
          historyLevel.setMaximum(20);
          historyLevel.setValue(0);
          jPanel1.add(historyLevel);
          
          
        jPanel5.setLayout(new java.awt.GridLayout(1, 2));
          
          projectDirButton.setLabel("Project Directory");
            jPanel5.add(projectDirButton);
            
            
          projectDirectory.setText(".");
            jPanel5.add(projectDirectory);
            
            jPanel1.add(jPanel5);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel1, gridBagConstraints1);
        
        
        jPanel4.setLayout(new java.awt.GridLayout(1, 2));
        jPanel4.setBorder(new javax.swing.border.TitledBorder("Program"));
        
        analysisRun.setToolTipText("Machine Learning System");
          analysisRun.setText("Analysis");
          analysisRun.addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  analysisRunMouseClicked(evt);
              }
          }
          );
          jPanel4.add(analysisRun);
          
          
        reactionRun.setToolTipText("The chemical reaction system");
          reactionRun.setSelected(true);
          reactionRun.setText("Reaction");
          reactionRun.addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  reactionRunMouseClicked(evt);
              }
          }
          );
          jPanel4.add(reactionRun);
          
          
        flameRun.setText("Flame");
          flameRun.addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  flameRunMouseClicked(evt);
              }
          }
          );
          jPanel4.add(flameRun);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel4, gridBagConstraints1);
        
        
        jPanel6.setLayout(new java.awt.GridLayout(1, 3));
        jPanel6.setBorder(new javax.swing.border.TitledBorder("Phase"));
        
        startButton.setText("Start");
          startButton.addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  startButtonMouseClicked(evt);
              }
          }
          );
          jPanel6.add(startButton);
          
          
        saveButton.setText("Save");
          saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  saveButtonMouseClicked(evt);
              }
          }
          );
          jPanel6.add(saveButton);
          
          
        quitButton.setToolTipText("Quit the process immediately (usually as a clear action)");
          quitButton.setText("Quit");
          quitButton.addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  quitButtonMouseClicked(evt);
              }
          }
          );
          jPanel6.add(quitButton);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel6, gridBagConstraints1);
        
    }//GEN-END:initComponents

  private void quitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quitButtonMouseClicked
    Top.quitSystemProcess();
  }//GEN-LAST:event_quitButtonMouseClicked

  private void saveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseClicked
      Top.stopSystemProcess();
  }//GEN-LAST:event_saveButtonMouseClicked

  private void startButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startButtonMouseClicked
    Top.startSystemProcess();
  }//GEN-LAST:event_startButtonMouseClicked

  private void flameRunMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flameRunMouseClicked
// Add your handling code here:
      if(flameRun.isSelected()) 
          setToFlame();
      else
          setToReaction();
  }//GEN-LAST:event_flameRunMouseClicked

  private void reactionRunMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reactionRunMouseClicked
// Add your handling code here:
      if(analysisRun.isSelected()) 
          setToReaction();
      else
          setToAnalysis();
  }//GEN-LAST:event_reactionRunMouseClicked

  private void analysisRunMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_analysisRunMouseClicked
// Add your handling code here:
      if(analysisRun.isSelected()) 
          setToAnalysis();
      else
          setToReaction();
  }//GEN-LAST:event_analysisRunMouseClicked

/** This sets the history level directly
 * @param level The history level
 */    
    public void setHistoryLevel(int level) {
        historyLevel.setValue(level);
    }    

/** The current history level
 * @return The current history level (from slider)
 * is returned
 */    
    public int getHistoryLevel() {
        return historyLevel.getValue();
    }
/** This increments the history level if the increment
 * flag is set (otherwise no increment is performed).
 * @return The new history level
 */    
    public int incrementHistoryLevel() {
        if(changeHistory.isSelected()) {
            setHistoryLevel(getHistoryLevel() + 1);
        }
        return getHistoryLevel();
    }
    public String getProjectDirectory() {
        return projectDirectory.getText();
    }
    
    public void setToAnalysis() {
        String name = Top.SystemInfo.analysisRunExecutable.getValue();
        Top.SystemInfo.reactionExecutable.setDefaultValue(name);
        analysisRun.setSelected(true);
        reactionRun.setSelected(false);
        flameRun.setSelected(false);
    }
    public void setToReaction() {
        String name = Top.SystemInfo.reactionRunExecutable.getValue();
        Top.SystemInfo.reactionExecutable.setDefaultValue(name);
        analysisRun.setSelected(false);
        reactionRun.setSelected(true);
        flameRun.setSelected(false);
    }
    public void setToFlame() {
        String name = Top.SystemInfo.flameRunExecutable.getValue();
        Top.SystemInfo.reactionExecutable.setDefaultValue(name);
        analysisRun.setSelected(false);
        reactionRun.setSelected(false);
        flameRun.setSelected(true);
    }
    
/** The name of the history set
 *
 * @return The name of the history set
 *
 */    
    public String getHistoryName() {
        return historyName.getText();
    }
    public void setHistoryName(String name) {
        historyName.setText(name);
    }
    
/** This gives the key for the REACTION command
 * @param operate This true if the operate command is expected.
 * The operate command is only returned if
 * the increment flag is set.
 * @return The key to be used
 *
 */    
    public String historyCommandKey(boolean operate) {
        String key;
        if(operate && changeHistory.isSelected()) {
            key = operateString;
        } else {
            key = changeString;
        }
        return key;
    }
/** Returns the debug level
 * @return The debug level given by the slider
 *
 */    
    public int getDebugLevel() {
        return debugSlider.getValue();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton changeHistory;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSlider debugSlider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField historyName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSlider historyLevel;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton projectDirButton;
    public javax.swing.JTextField projectDirectory;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton analysisRun;
    private javax.swing.JRadioButton reactionRun;
    private javax.swing.JRadioButton flameRun;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JButton startButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton quitButton;
    // End of variables declaration//GEN-END:variables

/** The operate history command (increments the history level)
 *
 */    
    public String operateString = new String("Operate");    

/** This is the change history command (does not increment history)
 */    
    public String changeString = new String("Change");
    
/** This is the experiment command (does not add information
 * to the instances and attributes)
 */    
    public String experimentString = new String("Experiment");
    
}
