/*
 * IgnitionTimes.java
 *
 * Created on May 7, 2003, 10:05 AM
 */

package ignition.times;
import utilities.FileFrame;
import utilities.BaseFrame;
import java.io.*;
import javax.swing.filechooser.*;
import javax.swing.JFileChooser;
import java.awt.event.*;
import link.*;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.util.Arrays;
import java.util.List;
import java.util.Collections;
import java.util.Vector;
import java.text.DecimalFormat;
/**
 *
 * @author  reaction
 */
public class IgnitionTimes extends javax.swing.JPanel {
    
    private String defaultDirectory = ".";
    private File[] selectedFiles = null;
    private String[] fileNames = null;
    private String rootName = "";
    private String plotFileName = "";
    private String gnuFileName = "";
    private String epsFileName = "";
    private String expFile = "";
    private String pattern = "#####0.0000000000";
 
    private ReactLink link = new ReactLink();
    IgnitionTimesOptions options = new IgnitionTimesOptions();
    /** Creates new form IgnitionTimes */
    public IgnitionTimes() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel8 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        clearButton = new javax.swing.JButton();
        optionsButton = new javax.swing.JButton();
        choosefiles = new javax.swing.JButton();
        Extract = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        epsButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fileTable = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        choicePanel = new javax.swing.JPanel();
        speciesNamePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        speciesNameField = new javax.swing.JTextField();
        phiPanel = new javax.swing.JPanel();
        phiButton = new javax.swing.JButton();
        phiField = new javax.swing.JTextField();
        pressurePanel = new javax.swing.JPanel();
        pressureButton = new javax.swing.JButton();
        pressureText = new javax.swing.JTextField();
        expDataPanel = new javax.swing.JPanel();
        expdataEnable = new javax.swing.JRadioButton();
        expFileButton = new javax.swing.JButton();
        expFileField = new javax.swing.JTextField();
        directoryPanel = new javax.swing.JPanel();
        dataDirButton = new javax.swing.JButton();
        datDirField = new javax.swing.JTextField();
        gnuDirButton = new javax.swing.JButton();
        gnuDirField = new javax.swing.JTextField();
        versionNumberButton = new javax.swing.JButton();
        versionNumberField = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        jPanel8.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(1, 4));

        jPanel1.setBorder(new javax.swing.border.TitledBorder("Read Output"));
        clearButton.setText("Clear");
        clearButton.setToolTipText("Clears the table");
        clearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearButtonMouseClicked(evt);
            }
        });

        jPanel1.add(clearButton);

        optionsButton.setText("Options");
        optionsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                optionsButtonMouseClicked(evt);
            }
        });

        jPanel1.add(optionsButton);

        choosefiles.setText("Choose");
        choosefiles.setToolTipText("Choos the set of Output Files");
        choosefiles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                choosefilesMouseClicked(evt);
            }
        });

        jPanel1.add(choosefiles);

        Extract.setText("Extract");
        Extract.setToolTipText("Extract the data from the output files");
        Extract.setEnabled(false);
        Extract.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExtractMouseClicked(evt);
            }
        });

        jPanel1.add(Extract);

        jPanel8.add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel7.setLayout(new java.awt.GridLayout(1, 0));

        epsButton.setText("Make eps file");
        jPanel7.add(epsButton);

        jPanel7.add(jPanel2);

        jPanel8.add(jPanel7, java.awt.BorderLayout.SOUTH);

        fileTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Temperature", "t(OH Max)", "t(CO2 Max)", "t(p_prime Max)", "t(t_prime Max)", "Kamenski"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(fileTable);

        jPanel8.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel9.setLayout(new java.awt.GridLayout(3, 1));

        choicePanel.setLayout(new java.awt.GridLayout(3, 2));

        choicePanel.setBorder(new javax.swing.border.TitledBorder("Run Information"));
        speciesNamePanel.setLayout(new java.awt.GridLayout(1, 2));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Molecule Name");
        jLabel1.setMaximumSize(new java.awt.Dimension(1000, 20));
        jLabel1.setPreferredSize(new java.awt.Dimension(100, 20));
        speciesNamePanel.add(jLabel1);

        speciesNameField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        speciesNameField.setText("nC10H22");
        speciesNameField.setToolTipText("The CHEMKIN name of the molecule");
        speciesNameField.setMaximumSize(new java.awt.Dimension(1000, 20));
        speciesNameField.setPreferredSize(new java.awt.Dimension(100, 20));
        speciesNamePanel.add(speciesNameField);

        choicePanel.add(speciesNamePanel);

        phiPanel.setLayout(new java.awt.GridLayout(1, 2));

        phiButton.setText("PHI");
        phiButton.setMaximumSize(new java.awt.Dimension(100, 20));
        phiButton.setPreferredSize(new java.awt.Dimension(100, 20));
        phiPanel.add(phiButton);

        phiField.setText("1.0");
        phiField.setToolTipText("The Equivalence Ratio");
        phiField.setMaximumSize(new java.awt.Dimension(1000, 20));
        phiField.setPreferredSize(new java.awt.Dimension(100, 20));
        phiPanel.add(phiField);

        choicePanel.add(phiPanel);

        pressurePanel.setLayout(new java.awt.GridLayout(1, 2));

        pressureButton.setText("Pressure");
        pressureButton.setMaximumSize(new java.awt.Dimension(1000, 20));
        pressureButton.setPreferredSize(new java.awt.Dimension(100, 20));
        pressurePanel.add(pressureButton);

        pressureText.setText("12.0d5");
        pressureText.setToolTipText("Pressure Value");
        pressureText.setMaximumSize(new java.awt.Dimension(1000, 20));
        pressureText.setPreferredSize(new java.awt.Dimension(100, 20));
        pressurePanel.add(pressureText);

        choicePanel.add(pressurePanel);

        jPanel9.add(choicePanel);

        expDataPanel.setLayout(new java.awt.GridLayout(1, 3));

        expDataPanel.setBorder(new javax.swing.border.TitledBorder("2nd Ignition Experimental Data"));
        expdataEnable.setText("Enable");
        expdataEnable.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                expdataEnableStateChanged(evt);
            }
        });

        expDataPanel.add(expdataEnable);

        expFileButton.setText("Experimental Data");
        expFileButton.setToolTipText("Push to find an experimental data file");
        expFileButton.setEnabled(false);
        expFileButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                expFileButtonMouseClicked(evt);
            }
        });

        expDataPanel.add(expFileButton);

        expFileField.setText("exp.dat");
        expFileField.setToolTipText("if NONE, then no exp file");
        expFileField.setEnabled(false);
        expDataPanel.add(expFileField);

        jPanel9.add(expDataPanel);

        directoryPanel.setLayout(new java.awt.GridLayout(3, 2));

        dataDirButton.setText("Data Directory");
        dataDirButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataDirButtonMouseClicked(evt);
            }
        });

        directoryPanel.add(dataDirButton);

        datDirField.setText(".");
        datDirField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datDirFieldActionPerformed(evt);
            }
        });

        directoryPanel.add(datDirField);

        gnuDirButton.setText("Gnu Directory");
        gnuDirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gnuDirButtonActionPerformed(evt);
            }
        });

        directoryPanel.add(gnuDirButton);

        gnuDirField.setText(".");
        directoryPanel.add(gnuDirField);

        versionNumberButton.setText("Version Number");
        directoryPanel.add(versionNumberButton);

        versionNumberField.setText("99.0");
        directoryPanel.add(versionNumberField);

        jPanel9.add(directoryPanel);

        add(jPanel9, java.awt.BorderLayout.NORTH);

    }//GEN-END:initComponents

    private void clearButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseClicked
        DefaultTableModel tmodel = (DefaultTableModel) fileTable.getModel();
        int numRows = tmodel.getRowCount();
        for(int i=0; i< numRows;i++) {
            tmodel.removeRow(0);
        }
    }//GEN-LAST:event_clearButtonMouseClicked

    private void optionsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_optionsButtonMouseClicked
        BaseFrame fr = new BaseFrame(options, "Options","Options","Options");
        fr.setVisible(true); 
    }//GEN-LAST:event_optionsButtonMouseClicked

    private void dataDirButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataDirButtonMouseClicked
        FileFrame fr = new FileFrame();
        boolean ans = fr.chooseDirectory();
        if(ans) {
            datDirField.setText(fr.chosenFile.toString());
        }
    }//GEN-LAST:event_dataDirButtonMouseClicked

    private void datDirFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datDirFieldActionPerformed

    }//GEN-LAST:event_datDirFieldActionPerformed

    private void gnuDirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gnuDirButtonActionPerformed
        FileFrame fr = new FileFrame();
        boolean ans = fr.chooseDirectory();
        if(ans) {
            gnuDirField.setText(fr.chosenFile.toString());
        }

    }//GEN-LAST:event_gnuDirButtonActionPerformed

    private void expdataEnableStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_expdataEnableStateChanged
        boolean value = expdataEnable.isSelected();
        expFileButton.setEnabled(value);
        expFileField.setEnabled(value);
    }//GEN-LAST:event_expdataEnableStateChanged

    private void expFileButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_expFileButtonMouseClicked
	JFileChooser f = new JFileChooser(defaultDirectory);
	f.showOpenDialog(this);
	expFile = f.getName(f.getSelectedFile());
        expFileField.setText(expFile);

    }//GEN-LAST:event_expFileButtonMouseClicked

    private void ExtractMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExtractMouseClicked
        rootName = speciesNameField.getText() + "-" +
                          phiField.getText() + "-" +
                          pressureText.getText() + "-" +
                          versionNumberField.getText();
        plotFileName = rootName + ".plt";
        gnuFileName = rootName + ".gnu";
        epsFileName = rootName + ".eps";
        try {
            writeData();
            writeGNUFile();
        } catch(FileNotFoundException ex) {
            System.out.println("Cannot create plot files");
        }
        
    }//GEN-LAST:event_ExtractMouseClicked

    private void writeData() throws FileNotFoundException {
        DefaultTableModel tmodel = (DefaultTableModel) fileTable.getModel();
        int numRows = tmodel.getRowCount();
        File plotFile = new File(datDirField.getText(),plotFileName);
        FileOutputStream strm = new FileOutputStream(plotFile);
        PrintWriter wr = new PrintWriter(strm);
        StringBuffer buf = new StringBuffer();
        if(options.includeTitle())
            title(buf);
        for(int i=0; i< numRows; i++) {
               Double temp  =  (Double) tmodel.getValueAt(i,0);
               Double oh    =  (Double) tmodel.getValueAt(i,1);
               Double co2   =  (Double) tmodel.getValueAt(i,2);
               Double p     =  (Double) tmodel.getValueAt(i,3);
               Double t     =  (Double) tmodel.getValueAt(i,4);
               Double k     =  (Double) tmodel.getValueAt(i,5);
               appendDouble(temp,buf);
               if(options.includeInverseT()) {
                   double inv = 1000.0/temp.doubleValue();
                   Double invD = new Double(inv);
                   appendDouble(invD,buf);
               }
               appendDouble(oh,buf);
               appendDouble(co2,buf);
               appendDouble(p,buf);
               appendDouble(t,buf);
               appendDouble(k,buf);
               buf.append("\n");
        }
        wr.println(buf.toString());
        wr.close();
    }
    private void title(StringBuffer buf) {
        buf.append(options.temperature.getMatchingString());
        buf.append("\t ");
        if(options.includeInverseT()) {
            buf.append("1000/T\t ");
        }
        buf.append(options.ohvalue.getMatchingString());
        buf.append("\t ");
        buf.append(options.co2value.getMatchingString());
        buf.append("\t ");
        buf.append(options.pressure.getMatchingString());
        buf.append("\t ");
        buf.append(options.tprime.getMatchingString());
        buf.append("\t ");
        buf.append(options.kamenetzki.getMatchingString());
        buf.append("\n");        
    }
    private void appendDouble(Double value, StringBuffer buf) {
        DecimalFormat myFormatter = new DecimalFormat(pattern);
        String output = myFormatter.format(value);
        //System.out.println("append: " + value + ", " + output + ", " + pattern);
        buf.append(output);
        buf.append("\t");
    }
    private void writeGNUFile() throws FileNotFoundException {
        File gnuFile = new File(gnuDirField.getText(),gnuFileName);
        FileOutputStream strm = new FileOutputStream(gnuFile);
        PrintWriter wr = new PrintWriter(strm);
        wr.println("set terminal postscript landscape");
        wr.println("set output '" + epsFileName + "'");
        wr.println("set terminal postscript landscape");
        wr.println("set key right bottom Right box 1");
        wr.println("set ylabel 'Ignition (ms)'");
        wr.println("set xlabel '1000/T'");
        wr.println("set logscale y");
        wr.println("set key bottom");
        wr.println("set title '" + speciesNameField.getText() 
                + "    PHI="  + phiField.getText()
                + "    Pressure="  + pressureText.getText()
                + "'");
        wr.println("plot \\");
        String pos = "(1000.0/($1)):2";
        if(options.includeInverseT()) {
            pos = "2:3";
        }
        
        wr.println("     \'" + plotFileName + "\' using " + pos + " title 'Model 2nd Ignition' with lines, \\");
        if(!expdataEnable.isSelected()) {
            wr.println("");
        } else {
                String tempS = "(1000.0*$1)";
                if(options.dataMillSecCheck.isSelected()) {
                    tempS = "1";
                }
                String timeS = "(1000.0/$2)";
                if(options.expInverseTCheck.isSelected()) {
                    timeS = "2";
                }
                wr.println("     \'" + expFileField.getText() + "\' using " + tempS + ":" + timeS + " title 'Exp 2nd Ignition'");
            }
       wr.close();
    }
    private void choosefilesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_choosefilesMouseClicked
        System.out.println("Choose File");
        DefaultTableModel tmodel = (DefaultTableModel) fileTable.getModel();

        JFileChooser f = new JFileChooser(defaultDirectory);
	IgnitionOutfileFilter filter = 
            new IgnitionOutfileFilter(speciesNameField.getText(), 
                                      pressureText.getText(),
                                      phiField.getText());
	f.addChoosableFileFilter(filter);
        f.setMultiSelectionEnabled(true);
	f.showOpenDialog(this);
        defaultDirectory = f.getCurrentDirectory().toString();
        System.out.println("Current Directory: " + f);
	selectedFiles  = f.getSelectedFiles();
        System.out.println("Number of files chosen:" + selectedFiles.length);
        if(selectedFiles.length > 0) {
             Extract.setEnabled(true);
             File first = selectedFiles[0];
             String parent = first.getParent();
             if(datDirField.getText().equals("."))
                datDirField.setText(parent);
            if(gnuDirField.getText().equals("."))
                gnuDirField.setText(parent);
             Vector<ReadIgnitionOutput> igntimes = new Vector<ReadIgnitionOutput>();
             int count = 0;
             for(int i=0; i< selectedFiles.length; i++) {
                 System.out.println(selectedFiles[i].getAbsolutePath());
                 try {
                     ReadIgnitionOutput rd = new ReadIgnitionOutput(selectedFiles[i],options);
                   igntimes.add(rd);
                   count++;
                } catch(NumberFormatException ex) {
                    System.out.println("Wrong!!! " + selectedFiles[i].getAbsolutePath());
                }
            }
             Collections.sort(igntimes,igntimes.get(0));
             for(int i=0; i< count; i++) {
                   ReadIgnitionOutput rdsorted = igntimes.get(i);
                   Double temp = new Double(rdsorted.temperature);
                   Double oh = new Double(rdsorted.OHValue);
                   Double co2 = new Double(rdsorted.CO2Value);
                   Double p = new Double(rdsorted.pValue);
                   Double t = new Double(rdsorted.tValue);
                   Double k = new Double(rdsorted.kamValue);
                   tmodel.addRow(new Object[] {temp,oh,co2,p,t,k});
             }
        }

    }//GEN-LAST:event_choosefilesMouseClicked
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Extract;
    private javax.swing.JPanel choicePanel;
    private javax.swing.JButton choosefiles;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField datDirField;
    private javax.swing.JButton dataDirButton;
    private javax.swing.JPanel directoryPanel;
    private javax.swing.JButton epsButton;
    private javax.swing.JPanel expDataPanel;
    private javax.swing.JButton expFileButton;
    private javax.swing.JTextField expFileField;
    private javax.swing.JRadioButton expdataEnable;
    private javax.swing.JTable fileTable;
    private javax.swing.JButton gnuDirButton;
    private javax.swing.JTextField gnuDirField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton optionsButton;
    private javax.swing.JButton phiButton;
    private javax.swing.JTextField phiField;
    private javax.swing.JPanel phiPanel;
    private javax.swing.JButton pressureButton;
    private javax.swing.JPanel pressurePanel;
    private javax.swing.JTextField pressureText;
    private javax.swing.JTextField speciesNameField;
    private javax.swing.JPanel speciesNamePanel;
    private javax.swing.JButton versionNumberButton;
    private javax.swing.JTextField versionNumberField;
    // End of variables declaration//GEN-END:variables
    
}
